{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\DashboardTable.js\";\n// src/components/DashboardTable.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardTable = ({\n  students\n}) => {\n  // If you're using static data to start, you can initialize state here,\n  // or you can fetch the data from a parent component or a context provider.\n\n  // This is a placeholder for where you would handle state updates.\n  const handleCommentChange = (studentId, newComment) => {\n    // Update the student's comment based on studentId\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.submissions && student.submissions.map((submission, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: submission.fileName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.grade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: student.comments,\n            onChange: e => handleCommentChange(student.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardTable;\nexport default DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DashboardTable","students","handleCommentChange","studentId","newComment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","student","name","submissions","submission","index","grade","type","value","comments","onChange","e","id","target","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/DashboardTable.js"],"sourcesContent":["// src/components/DashboardTable.js\r\nimport React, { useState } from 'react';\r\n\r\nconst DashboardTable = ({ students }) => {\r\n  // If you're using static data to start, you can initialize state here,\r\n  // or you can fetch the data from a parent component or a context provider.\r\n\r\n  // This is a placeholder for where you would handle state updates.\r\n  const handleCommentChange = (studentId, newComment) => {\r\n    // Update the student's comment based on studentId\r\n  };\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Submission</th>\r\n          <th>Grade</th>\r\n          <th>Comments</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {students.map((student) => (\r\n          <tr key={student.id}>\r\n            <td>{student.name}</td>\r\n            <td>\r\n              {/* Map over submissions if they exist */}\r\n              {student.submissions && student.submissions.map((submission, index) => (\r\n                <div key={index}>{submission.fileName}</div>\r\n              ))}\r\n              {/* TODO: Add file upload functionality here */}\r\n            </td>\r\n            <td>{student.grade}</td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                value={student.comments}\r\n                onChange={(e) => handleCommentChange(student.id, e.target.value)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DashboardTable;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC;EACA;;EAEA;EACA,MAAMC,mBAAmB,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IACrD;EAAA,CACD;EAED,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,eACEN,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbV,OAAA;UAAAM,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBV,OAAA;UAAAM,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdV,OAAA;UAAAM,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRV,OAAA;MAAAM,QAAA,EACGJ,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACpBZ,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAKM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBV,OAAA;UAAAM,QAAA,EAEGM,OAAO,CAACE,WAAW,IAAIF,OAAO,CAACE,WAAW,CAACH,GAAG,CAAC,CAACI,UAAU,EAAEC,KAAK,kBAChEhB,OAAA;YAAAM,QAAA,EAAkBS,UAAU,CAACR;UAAQ,GAA3BS,KAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA4B,CAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEA,CAAC,eACLV,OAAA;UAAAM,QAAA,EAAKM,OAAO,CAACK;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBV,OAAA;UAAAM,QAAA,eACEN,OAAA;YACEkB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEP,OAAO,CAACQ,QAAS;YACxBC,QAAQ,EAAGC,CAAC,IAAKnB,mBAAmB,CAACS,OAAO,CAACW,EAAE,EAAED,CAAC,CAACE,MAAM,CAACL,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA,GAhBEE,OAAO,CAACW,EAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACe,EAAA,GA3CIxB,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}