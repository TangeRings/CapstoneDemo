{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { uploadFileToServer } from './Uploader';\nimport { getSpreadsheetData } from './getList';\nimport { Link } from 'react-router-dom';\nimport '../styles/dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spreadsheetData, setSpreadsheetData] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload first.');\n      return;\n    }\n    setIsUploading(true);\n    try {\n      await uploadFileToServer(selectedFile, student.id);\n      alert('File uploaded successfully');\n      // Consider refreshing spreadsheet data here if needed\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert('Failed to upload file.');\n    } finally {\n      setIsUploading(false);\n      setSelectedFile(null); // Clear the selected file\n    }\n  };\n  const fetchSpreadsheetData = async () => {\n    try {\n      const data = await getSpreadsheetData();\n      data.sort((a, b) => new Date(a[2]) - new Date(b[2]));\n      setSpreadsheetData(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      alert('Failed to fetch data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"student-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"student-name\",\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"upload-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          disabled: isUploading,\n          style: {\n            display: 'none'\n          },\n          id: `file-upload-${student.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `file-upload-${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"span\",\n            disabled: isUploading,\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 40\n            }, this),\n            onClick: handleUpload,\n            children: isUploading ? 'Uploading...' : 'Upload'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: fetchSpreadsheetData,\n          disabled: isUploading,\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 36\n          }, this),\n          children: \"Refresh Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), spreadsheetData.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colspan: \"3\",\n        className: \"file-list-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"uploaded-files-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Filename\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Upload Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: spreadsheetData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/file/${encodeURIComponent(row[0])}`,\n                    children: row[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: row[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentRow, \"zDsS36nZyUiW7EnWYNDLM6GbHW8=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","Button","CloudUploadIcon","RefreshIcon","uploadFileToServer","getSpreadsheetData","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentRow","student","_s","selectedFile","setSelectedFile","spreadsheetData","setSpreadsheetData","isUploading","setIsUploading","handleFileChange","event","target","files","handleUpload","alert","id","error","console","fetchSpreadsheetData","data","sort","a","b","Date","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","style","display","htmlFor","variant","component","startIcon","onClick","length","colspan","map","row","index","to","encodeURIComponent","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport { uploadFileToServer } from './Uploader';\r\nimport { getSpreadsheetData } from './getList';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/dashboard.css';\r\n\r\nconst StudentRow = ({ student }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [spreadsheetData, setSpreadsheetData] = useState([]);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert('Please select a file to upload first.');\r\n            return;\r\n        }\r\n\r\n        setIsUploading(true);\r\n        try {\r\n            await uploadFileToServer(selectedFile, student.id);\r\n            alert('File uploaded successfully');\r\n            // Consider refreshing spreadsheet data here if needed\r\n        } catch (error) {\r\n            console.error(\"Error uploading file:\", error);\r\n            alert('Failed to upload file.');\r\n        } finally {\r\n            setIsUploading(false);\r\n            setSelectedFile(null); // Clear the selected file\r\n        }\r\n    };\r\n\r\n    const fetchSpreadsheetData = async () => {\r\n        try {\r\n            const data = await getSpreadsheetData();\r\n            data.sort((a, b) => new Date(a[2]) - new Date(b[2]));\r\n            setSpreadsheetData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n            alert('Failed to fetch data.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <tr className=\"student-row\">\r\n                <td className=\"student-name\">{student.name}</td>\r\n                <td className=\"upload-column\">\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}\r\n                        disabled={isUploading}\r\n                        style={{ display: 'none' }}\r\n                        id={`file-upload-${student.id}`}\r\n                    />\r\n                    <label htmlFor={`file-upload-${student.id}`}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            component=\"span\"\r\n                            disabled={isUploading}\r\n                            startIcon={<CloudUploadIcon />}\r\n                            onClick={handleUpload}\r\n                        >\r\n                            {isUploading ? 'Uploading...' : 'Upload'}\r\n                        </Button>\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={fetchSpreadsheetData}\r\n                        disabled={isUploading}\r\n                        startIcon={<RefreshIcon />}\r\n                    >\r\n                        Refresh Data\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n            {spreadsheetData.length > 0 && (\r\n                <tr>\r\n                    <td colspan=\"3\" className=\"file-list-column\">\r\n                        <div className=\"uploaded-files-container\">\r\n                            <table className=\"uploaded-files-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Filename</th>\r\n                                        <th>Upload Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {spreadsheetData.map((row, index) => (\r\n                                        <tr key={index}>\r\n                                            <td>\r\n                                                <Link to={`/file/${encodeURIComponent(row[0])}`}>\r\n                                                    {row[0]}\r\n                                                </Link>\r\n                                            </td>\r\n                                            <td>{row[1]}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudentRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}