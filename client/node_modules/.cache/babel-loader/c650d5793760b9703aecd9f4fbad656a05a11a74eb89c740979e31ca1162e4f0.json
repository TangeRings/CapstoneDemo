{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\nconst stream_1 = require(\"stream\");\nconst https_proxy_agent_1 = require(\"https-proxy-agent\");\nconst uuid_1 = require(\"uuid\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n  var _a, _b, _c, _d;\n  const proxy = ((_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.HTTPS_PROXY) || ((_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.https_proxy) || ((_c = process === null || process === void 0 ? void 0 : process.env) === null || _c === void 0 ? void 0 : _c.HTTP_PROXY) || ((_d = process === null || process === void 0 ? void 0 : process.env) === null || _d === void 0 ? void 0 : _d.http_proxy);\n  if (proxy) {\n    HttpsProxyAgent = https_proxy_agent_1.HttpsProxyAgent;\n  }\n  return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n  var _a;\n  const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n  if (!noProxyEnv) {\n    return false;\n  }\n  const noProxyUrls = noProxyEnv.split(',');\n  const parsedURL = url instanceof url_1.URL ? url : new url_1.URL(url);\n  return !!noProxyUrls.find(url => {\n    if (url.startsWith('*.') || url.startsWith('.')) {\n      url = url.replace(/^\\*\\./, '.');\n      return parsedURL.hostname.endsWith(url);\n    } else {\n      return url === parsedURL.origin || url === parsedURL.hostname;\n    }\n  });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n  // If there is a match between the no_proxy env variables and the url, then do not proxy\n  if (skipProxy(url)) {\n    return undefined;\n    // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n  } else {\n    return loadProxy();\n  }\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request(opts = {}) {\n    opts = this.validateOpts(opts);\n    return this._request(opts);\n  }\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request(opts = {}) {\n    var _a;\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        if (opts.responseType === 'stream') {\n          let response = '';\n          await new Promise(resolve => {\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('data', chunk => {\n              response += chunk;\n            });\n            (translatedResponse === null || translatedResponse === void 0 ? void 0 : translatedResponse.data).on('end', resolve);\n          });\n          translatedResponse.data = response;\n        }\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e instanceof common_1.GaxiosError ? e : new common_1.GaxiosError(e.message, opts, undefined, e);\n      const {\n        shouldRetry,\n        config\n      } = await (0, retry_1.getRetryConfig)(err);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        // The error's config could be redacted - therefore we only want to\n        // copy the retry state over to the existing config\n        opts.retryConfig = (_a = err.config) === null || _a === void 0 ? void 0 : _a.retryConfig;\n        return this._request(opts);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (_a) {\n            // continue\n          }\n          return data;\n        }\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      case 'text':\n        return res.text();\n      default:\n        return this.getResponseDataFromContentType(res);\n    }\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n  validateOpts(options) {\n    const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    // baseUrl has been deprecated, remove in 2.0\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl.toString() + opts.url;\n    }\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n    if (opts.params && Object.keys(opts.params).length > 0) {\n      let additionalQueryParams = opts.paramsSerializer(opts.params);\n      if (additionalQueryParams.startsWith('?')) {\n        additionalQueryParams = additionalQueryParams.slice(1);\n      }\n      const prefix = opts.url.toString().includes('?') ? '&' : '?';\n      opts.url = opts.url + prefix + additionalQueryParams;\n    }\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    opts.headers = opts.headers || {};\n    if (opts.multipart === undefined && opts.data) {\n      const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n      if (is_stream_1.default.readable(opts.data)) {\n        opts.body = opts.data;\n      } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n        // Do not attempt to JSON.stringify() a Buffer:\n        opts.body = opts.data;\n        if (!hasHeader(opts, 'Content-Type')) {\n          opts.headers['Content-Type'] = 'application/json';\n        }\n      } else if (typeof opts.data === 'object') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content using querystring:\n        if (!isFormData) {\n          if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n            opts.body = opts.paramsSerializer(opts.data);\n          } else {\n            // } else if (!(opts.data instanceof FormData)) {\n            if (!hasHeader(opts, 'Content-Type')) {\n              opts.headers['Content-Type'] = 'application/json';\n            }\n            opts.body = JSON.stringify(opts.data);\n          }\n        }\n      } else {\n        opts.body = opts.data;\n      }\n    } else if (opts.multipart && opts.multipart.length > 0) {\n      // note: once the minimum version reaches Node 16,\n      // this can be replaced with randomUUID() function from crypto\n      // and the dependency on UUID removed\n      const boundary = (0, uuid_1.v4)();\n      opts.headers['Content-Type'] = `multipart/related; boundary=${boundary}`;\n      const bodyStream = new stream_1.PassThrough();\n      opts.body = bodyStream;\n      (0, stream_1.pipeline)(this.getMultipartRequest(opts.multipart, boundary), bodyStream, () => {});\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'unknown';\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n    opts.method = opts.method || 'GET';\n    const proxy = getProxy(opts.url);\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        // Proxy is being used in conjunction with mTLS.\n        if (opts.cert && opts.key) {\n          const parsedURL = new url_1.URL(proxy);\n          opts.agent = new HttpsProxyAgent({\n            port: parsedURL.port,\n            host: parsedURL.host,\n            protocol: parsedURL.protocol,\n            cert: opts.cert,\n            key: opts.key\n          });\n        } else {\n          opts.agent = new HttpsProxyAgent(proxy);\n        }\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS:\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n    if (typeof opts.errorRedactor !== 'function' && opts.errorRedactor !== false) {\n      opts.errorRedactor = common_1.defaultErrorRedactor;\n    }\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n  /**\n   * Attempts to parse a response by looking at the Content-Type header.\n   * @param {FetchResponse} response the HTTP response.\n   * @returns {Promise<any>} a promise that resolves to the response data.\n   */\n  async getResponseDataFromContentType(response) {\n    let contentType = response.headers.get('Content-Type');\n    if (contentType === null) {\n      // Maintain existing functionality by calling text()\n      return response.text();\n    }\n    contentType = contentType.toLowerCase();\n    if (contentType.includes('application/json')) {\n      let data = await response.text();\n      try {\n        data = JSON.parse(data);\n      } catch (_a) {\n        // continue\n      }\n      return data;\n    } else if (contentType.match(/^text\\//)) {\n      return response.text();\n    } else {\n      // If the content type is something not easily handled, just return the raw data (blob)\n      return response.blob();\n    }\n  }\n  /**\n   * Creates an async generator that yields the pieces of a multipart/related request body.\n   * This implementation follows the spec: https://www.ietf.org/rfc/rfc2387.txt. However, recursive\n   * multipart/related requests are not currently supported.\n   *\n   * @param {GaxioMultipartOptions[]} multipartOptions the pieces to turn into a multipart/related body.\n   * @param {string} boundary the boundary string to be placed between each part.\n   */\n  async *getMultipartRequest(multipartOptions, boundary) {\n    const finale = `--${boundary}--`;\n    for (const currentPart of multipartOptions) {\n      const partContentType = currentPart.headers['Content-Type'] || 'application/octet-stream';\n      const preamble = `--${boundary}\\r\\nContent-Type: ${partContentType}\\r\\n\\r\\n`;\n      yield preamble;\n      if (typeof currentPart.content === 'string') {\n        yield currentPart.content;\n      } else {\n        yield* currentPart.content;\n      }\n      yield '\\r\\n';\n    }\n    yield finale;\n  }\n}\nexports.Gaxios = Gaxios;","map":{"version":3,"names":["extend_1","__importDefault","require","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","common_1","retry_1","stream_1","https_proxy_agent_1","uuid_1","fetch","hasFetch","window","default","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","HttpsProxyAgent","loadProxy","proxy","_a","process","env","HTTPS_PROXY","_b","https_proxy","_c","HTTP_PROXY","_d","http_proxy","skipProxy","url","noProxyEnv","NO_PROXY","no_proxy","noProxyUrls","split","parsedURL","URL","find","startsWith","replace","hostname","endsWith","origin","getProxy","Gaxios","constructor","defaults","agentCache","Map","request","opts","validateOpts","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","responseType","response","Promise","resolve","on","chunk","GaxiosError","e","err","message","shouldRetry","config","getRetryConfig","retryConfig","currentRetryAttempt","body","text","JSON","parse","arrayBuffer","blob","getResponseDataFromContentType","Error","baseUrl","baseURL","toString","paramsSerializer","params","length","additionalQueryParams","slice","prefix","includes","maxContentLength","size","maxRedirects","follow","multipart","isFormData","FormData","readable","isBuffer","stringify","boundary","v4","bodyStream","PassThrough","pipeline","getMultipartRequest","method","has","agent","get","cert","port","host","protocol","set","Agent","errorRedactor","defaultErrorRedactor","forEach","value","statusText","responseURL","contentType","match","multipartOptions","finale","currentPart","partContentType","preamble","content","exports"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,MAAAA,QAAA,GAAAC,eAAA,CAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,YAAA,GAAAH,eAAA,CAAAC,OAAA;AACA,MAAAG,aAAA,GAAAJ,eAAA,CAAAC,OAAA;AACA,MAAAI,WAAA,GAAAL,eAAA,CAAAC,OAAA;AACA,MAAAK,KAAA,GAAAL,OAAA;AAEA,MAAAM,QAAA,GAAAN,OAAA;AAUA,MAAAO,OAAA,GAAAP,OAAA;AACA,MAAAQ,QAAA,GAAAR,OAAA;AACA,MAAAS,mBAAA,GAAAT,OAAA;AACA,MAAAU,MAAA,GAAAV,OAAA;AAEA;AAEA,MAAMW,KAAK,GAAGC,QAAQ,EAAE,GAAGC,MAAM,CAACF,KAAK,GAAGT,YAAA,CAAAY,OAAS;AAEnD,SAASC,SAASA,CAAA;EAChB,OAAO,OAAOF,MAAM,KAAK,WAAW,IAAI,CAAC,CAACA,MAAM;AAClD;AAEA,SAASD,QAAQA,CAAA;EACf,OAAOG,SAAS,EAAE,IAAI,CAAC,CAACF,MAAM,CAACF,KAAK;AACtC;AAEA,SAASK,SAASA,CAAA;EAChB,OAAO,OAAOC,MAAM,KAAK,WAAW;AACtC;AAEA,SAASC,SAASA,CAACC,OAAsB,EAAEC,MAAc;EACvD,OAAO,CAAC,CAACC,SAAS,CAACF,OAAO,EAAEC,MAAM,CAAC;AACrC;AAEA,SAASC,SAASA,CAACF,OAAsB,EAAEC,MAAc;EACvDA,MAAM,GAAGA,MAAM,CAACE,WAAW,EAAE;EAC7B,KAAK,MAAMC,GAAG,IAAIC,MAAM,CAACC,IAAI,CAAC,CAAAN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,OAAO,KAAI,EAAE,CAAC,EAAE;IACrD,IAAIN,MAAM,KAAKG,GAAG,CAACD,WAAW,EAAE,EAAE;MAChC,OAAOH,OAAO,CAACO,OAAQ,CAACH,GAAG,CAAC;IAC9B;EACF;EACA,OAAOI,SAAS;AAClB;AAEA,IAAIC,eAAoB;AAExB,SAASC,SAASA,CAAA;;EAChB,MAAMC,KAAK,GACT,EAAAC,EAAA,GAAAC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,WAAW,MACzB,CAAAC,EAAA,GAAAH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAE,EAAA,uBAAAA,EAAA,CAAEC,WAAW,MACzB,CAAAC,EAAA,GAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAI,EAAA,uBAAAA,EAAA,CAAEC,UAAU,MACxB,CAAAC,EAAA,GAAAP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,GAAG,cAAAM,EAAA,uBAAAA,EAAA,CAAEC,UAAU;EAC1B,IAAIV,KAAK,EAAE;IACTF,eAAe,GAAGnB,mBAAA,CAAAmB,eAAe;EACnC;EAEA,OAAOE,KAAK;AACd;AAEAD,SAAS,EAAE;AAEX,SAASY,SAASA,CAACC,GAAiB;;EAClC,MAAMC,UAAU,GAAG,CAAAZ,EAAA,GAAAC,OAAO,CAACC,GAAG,CAACW,QAAQ,cAAAb,EAAA,cAAAA,EAAA,GAAIC,OAAO,CAACC,GAAG,CAACY,QAAQ;EAC/D,IAAI,CAACF,UAAU,EAAE;IACf,OAAO,KAAK;EACd;EACA,MAAMG,WAAW,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;EACzC,MAAMC,SAAS,GAAGN,GAAG,YAAYrC,KAAA,CAAA4C,GAAG,GAAGP,GAAG,GAAG,IAAIrC,KAAA,CAAA4C,GAAG,CAACP,GAAG,CAAC;EACzD,OAAO,CAAC,CAACI,WAAW,CAACI,IAAI,CAACR,GAAG,IAAG;IAC9B,IAAIA,GAAG,CAACS,UAAU,CAAC,IAAI,CAAC,IAAIT,GAAG,CAACS,UAAU,CAAC,GAAG,CAAC,EAAE;MAC/CT,GAAG,GAAGA,GAAG,CAACU,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;MAC/B,OAAOJ,SAAS,CAACK,QAAQ,CAACC,QAAQ,CAACZ,GAAG,CAAC;IACzC,CAAC,MAAM;MACL,OAAOA,GAAG,KAAKM,SAAS,CAACO,MAAM,IAAIb,GAAG,KAAKM,SAAS,CAACK,QAAQ;IAC/D;EACF,CAAC,CAAC;AACJ;AAEA;AACA;AACA,SAASG,QAAQA,CAACd,GAAiB;EACjC;EACA,IAAID,SAAS,CAACC,GAAG,CAAC,EAAE;IAClB,OAAOf,SAAS;IAChB;EACF,CAAC,MAAM;IACL,OAAOE,SAAS,EAAE;EACpB;AACF;AAEA,MAAa4B,MAAM;EAQjB;;;;EAIAC,YAAYC,QAAwB;IAX1B,KAAAC,UAAU,GAAG,IAAIC,GAAG,EAA+C;IAY3E,IAAI,CAACF,QAAQ,GAAGA,QAAQ,IAAI,EAAE;EAChC;EAEA;;;;EAIA,MAAMG,OAAOA,CAAUC,IAAA,GAAsB,EAAE;IAC7CA,IAAI,GAAG,IAAI,CAACC,YAAY,CAACD,IAAI,CAAC;IAC9B,OAAO,IAAI,CAACE,QAAQ,CAACF,IAAI,CAAC;EAC5B;EAEQ,MAAMG,eAAeA,CAC3BH,IAAmB;IAEnB,MAAMI,SAAS,GAAGJ,IAAI,CAACK,mBAAmB,IAAIzD,KAAK;IACnD,MAAM0D,GAAG,GAAI,MAAMF,SAAS,CAACJ,IAAI,CAACrB,GAAI,EAAEqB,IAAI,CAAmB;IAC/D,MAAMO,IAAI,GAAG,MAAM,IAAI,CAACC,eAAe,CAACR,IAAI,EAAEM,GAAG,CAAC;IAClD,OAAO,IAAI,CAACG,iBAAiB,CAAIT,IAAI,EAAEM,GAAG,EAAEC,IAAI,CAAC;EACnD;EAEA;;;;EAIU,MAAML,QAAQA,CACtBF,IAAA,GAAsB,EAAE;;IAExB,IAAI;MACF,IAAIU,kBAAqC;MACzC,IAAIV,IAAI,CAACW,OAAO,EAAE;QAChBD,kBAAkB,GAAG,MAAMV,IAAI,CAACW,OAAO,CACrCX,IAAI,EACJ,IAAI,CAACG,eAAe,CAACS,IAAI,CAAC,IAAI,CAAC,CAChC;MACH,CAAC,MAAM;QACLF,kBAAkB,GAAG,MAAM,IAAI,CAACP,eAAe,CAACH,IAAI,CAAC;MACvD;MAEA,IAAI,CAACA,IAAI,CAACa,cAAe,CAACH,kBAAkB,CAACI,MAAM,CAAC,EAAE;QACpD,IAAId,IAAI,CAACe,YAAY,KAAK,QAAQ,EAAE;UAClC,IAAIC,QAAQ,GAAG,EAAE;UACjB,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAG;YAC1B,CAACR,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEH,IAAe,EAACY,EAAE,CAAC,MAAM,EAAEC,KAAK,IAAG;cACtDJ,QAAQ,IAAII,KAAK;YACnB,CAAC,CAAC;YACF,CAACV,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAEH,IAAe,EAACY,EAAE,CAAC,KAAK,EAAED,OAAO,CAAC;UACzD,CAAC,CAAC;UACFR,kBAAkB,CAACH,IAAI,GAAGS,QAAa;QACzC;QACA,MAAM,IAAIzE,QAAA,CAAA8E,WAAW,CACnB,mCAAmCX,kBAAkB,CAACI,MAAM,EAAE,EAC9Dd,IAAI,EACJU,kBAAkB,CACnB;MACH;MACA,OAAOA,kBAAkB;IAC3B,CAAC,CAAC,OAAOY,CAAC,EAAE;MACV,MAAMC,GAAG,GACPD,CAAC,YAAY/E,QAAA,CAAA8E,WAAW,GACpBC,CAAC,GACD,IAAI/E,QAAA,CAAA8E,WAAW,CAAEC,CAAW,CAACE,OAAO,EAAExB,IAAI,EAAEpC,SAAS,EAAE0D,CAAU,CAAC;MAExE,MAAM;QAACG,WAAW;QAAEC;MAAM,CAAC,GAAG,MAAM,IAAAlF,OAAA,CAAAmF,cAAc,EAACJ,GAAG,CAAC;MACvD,IAAIE,WAAW,IAAIC,MAAM,EAAE;QACzBH,GAAG,CAACG,MAAM,CAACE,WAAY,CAACC,mBAAmB,GACzCH,MAAM,CAACE,WAAY,CAACC,mBAAmB;QAEzC;QACA;QACA7B,IAAI,CAAC4B,WAAW,GAAG,CAAA5D,EAAA,GAAAuD,GAAG,CAACG,MAAM,cAAA1D,EAAA,uBAAAA,EAAA,CAAE4D,WAAW;QAE1C,OAAO,IAAI,CAAC1B,QAAQ,CAAIF,IAAI,CAAC;MAC/B;MACA,MAAMuB,GAAG;IACX;EACF;EAEQ,MAAMf,eAAeA,CAC3BR,IAAmB,EACnBM,GAAkB;IAElB,QAAQN,IAAI,CAACe,YAAY;MACvB,KAAK,QAAQ;QACX,OAAOT,GAAG,CAACwB,IAAI;MACjB,KAAK,MAAM;QAAE;UACX,IAAIvB,IAAI,GAAG,MAAMD,GAAG,CAACyB,IAAI,EAAE;UAC3B,IAAI;YACFxB,IAAI,GAAGyB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAAC;UACzB,CAAC,CAAC,OAAAvC,EAAA,EAAM;YACN;UAAA;UAEF,OAAOuC,IAAU;QACnB;MACA,KAAK,aAAa;QAChB,OAAOD,GAAG,CAAC4B,WAAW,EAAE;MAC1B,KAAK,MAAM;QACT,OAAO5B,GAAG,CAAC6B,IAAI,EAAE;MACnB,KAAK,MAAM;QACT,OAAO7B,GAAG,CAACyB,IAAI,EAAE;MACnB;QACE,OAAO,IAAI,CAACK,8BAA8B,CAAC9B,GAAG,CAAC;IACnD;EACF;EAEA;;;;EAIQL,YAAYA,CAAC7C,OAAsB;IACzC,MAAM4C,IAAI,GAAG,IAAAjE,QAAA,CAAAgB,OAAM,EAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC6C,QAAQ,EAAExC,OAAO,CAAC;IACrD,IAAI,CAAC4C,IAAI,CAACrB,GAAG,EAAE;MACb,MAAM,IAAI0D,KAAK,CAAC,kBAAkB,CAAC;IACrC;IAEA;IACA,MAAMC,OAAO,GAAGtC,IAAI,CAACsC,OAAO,IAAItC,IAAI,CAACuC,OAAO;IAC5C,IAAID,OAAO,EAAE;MACXtC,IAAI,CAACrB,GAAG,GAAG2D,OAAO,CAACE,QAAQ,EAAE,GAAGxC,IAAI,CAACrB,GAAG;IAC1C;IAEAqB,IAAI,CAACyC,gBAAgB,GAAGzC,IAAI,CAACyC,gBAAgB,IAAI,IAAI,CAACA,gBAAgB;IACtE,IAAIzC,IAAI,CAAC0C,MAAM,IAAIjF,MAAM,CAACC,IAAI,CAACsC,IAAI,CAAC0C,MAAM,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACtD,IAAIC,qBAAqB,GAAG5C,IAAI,CAACyC,gBAAgB,CAACzC,IAAI,CAAC0C,MAAM,CAAC;MAC9D,IAAIE,qBAAqB,CAACxD,UAAU,CAAC,GAAG,CAAC,EAAE;QACzCwD,qBAAqB,GAAGA,qBAAqB,CAACC,KAAK,CAAC,CAAC,CAAC;MACxD;MACA,MAAMC,MAAM,GAAG9C,IAAI,CAACrB,GAAG,CAAC6D,QAAQ,EAAE,CAACO,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;MAC5D/C,IAAI,CAACrB,GAAG,GAAGqB,IAAI,CAACrB,GAAG,GAAGmE,MAAM,GAAGF,qBAAqB;IACtD;IAEA,IAAI,OAAOxF,OAAO,CAAC4F,gBAAgB,KAAK,QAAQ,EAAE;MAChDhD,IAAI,CAACiD,IAAI,GAAG7F,OAAO,CAAC4F,gBAAgB;IACtC;IAEA,IAAI,OAAO5F,OAAO,CAAC8F,YAAY,KAAK,QAAQ,EAAE;MAC5ClD,IAAI,CAACmD,MAAM,GAAG/F,OAAO,CAAC8F,YAAY;IACpC;IAEAlD,IAAI,CAACrC,OAAO,GAAGqC,IAAI,CAACrC,OAAO,IAAI,EAAE;IACjC,IAAIqC,IAAI,CAACoD,SAAS,KAAKxF,SAAS,IAAIoC,IAAI,CAACO,IAAI,EAAE;MAC7C,MAAM8C,UAAU,GACd,OAAOC,QAAQ,KAAK,WAAW,GAC3B,KAAK,GACL,CAAAtD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,IAAI,aAAY+C,QAAQ;MACpC,IAAIjH,WAAA,CAAAU,OAAQ,CAACwG,QAAQ,CAACvD,IAAI,CAACO,IAAI,CAAC,EAAE;QAChCP,IAAI,CAAC8B,IAAI,GAAG9B,IAAI,CAACO,IAAI;MACvB,CAAC,MAAM,IAAItD,SAAS,EAAE,IAAIC,MAAM,CAACsG,QAAQ,CAACxD,IAAI,CAACO,IAAI,CAAC,EAAE;QACpD;QACAP,IAAI,CAAC8B,IAAI,GAAG9B,IAAI,CAACO,IAAI;QACrB,IAAI,CAACpD,SAAS,CAAC6C,IAAI,EAAE,cAAc,CAAC,EAAE;UACpCA,IAAI,CAACrC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;QACnD;MACF,CAAC,MAAM,IAAI,OAAOqC,IAAI,CAACO,IAAI,KAAK,QAAQ,EAAE;QACxC;QACA;QACA,IAAI,CAAC8C,UAAU,EAAE;UACf,IACE/F,SAAS,CAAC0C,IAAI,EAAE,cAAc,CAAC,KAC/B,mCAAmC,EACnC;YACAA,IAAI,CAAC8B,IAAI,GAAG9B,IAAI,CAACyC,gBAAgB,CAACzC,IAAI,CAACO,IAAI,CAAC;UAC9C,CAAC,MAAM;YACL;YACA,IAAI,CAACpD,SAAS,CAAC6C,IAAI,EAAE,cAAc,CAAC,EAAE;cACpCA,IAAI,CAACrC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;YACnD;YACAqC,IAAI,CAAC8B,IAAI,GAAGE,IAAI,CAACyB,SAAS,CAACzD,IAAI,CAACO,IAAI,CAAC;UACvC;QACF;MACF,CAAC,MAAM;QACLP,IAAI,CAAC8B,IAAI,GAAG9B,IAAI,CAACO,IAAI;MACvB;IACF,CAAC,MAAM,IAAIP,IAAI,CAACoD,SAAS,IAAIpD,IAAI,CAACoD,SAAS,CAACT,MAAM,GAAG,CAAC,EAAE;MACtD;MACA;MACA;MACA,MAAMe,QAAQ,GAAG,IAAA/G,MAAA,CAAAgH,EAAE,GAAE;MACrB3D,IAAI,CAACrC,OAAO,CAAC,cAAc,CAAC,GAAG,+BAA+B+F,QAAQ,EAAE;MACxE,MAAME,UAAU,GAAG,IAAInH,QAAA,CAAAoH,WAAW,EAAE;MACpC7D,IAAI,CAAC8B,IAAI,GAAG8B,UAAU;MACtB,IAAAnH,QAAA,CAAAqH,QAAQ,EACN,IAAI,CAACC,mBAAmB,CAAC/D,IAAI,CAACoD,SAAS,EAAEM,QAAQ,CAAC,EAClDE,UAAU,EACV,MAAK,CAAE,CAAC,CACT;IACH;IAEA5D,IAAI,CAACa,cAAc,GAAGb,IAAI,CAACa,cAAc,IAAI,IAAI,CAACA,cAAc;IAChEb,IAAI,CAACe,YAAY,GAAGf,IAAI,CAACe,YAAY,IAAI,SAAS;IAClD,IAAI,CAACf,IAAI,CAACrC,OAAO,CAAC,QAAQ,CAAC,IAAIqC,IAAI,CAACe,YAAY,KAAK,MAAM,EAAE;MAC3Df,IAAI,CAACrC,OAAO,CAAC,QAAQ,CAAC,GAAG,kBAAkB;IAC7C;IACAqC,IAAI,CAACgE,MAAM,GAAGhE,IAAI,CAACgE,MAAM,IAAI,KAAK;IAElC,MAAMjG,KAAK,GAAG0B,QAAQ,CAACO,IAAI,CAACrB,GAAG,CAAC;IAChC,IAAIZ,KAAK,EAAE;MACT,IAAI,IAAI,CAAC8B,UAAU,CAACoE,GAAG,CAAClG,KAAK,CAAC,EAAE;QAC9BiC,IAAI,CAACkE,KAAK,GAAG,IAAI,CAACrE,UAAU,CAACsE,GAAG,CAACpG,KAAK,CAAC;MACzC,CAAC,MAAM;QACL;QACA,IAAIiC,IAAI,CAACoE,IAAI,IAAIpE,IAAI,CAACxC,GAAG,EAAE;UACzB,MAAMyB,SAAS,GAAG,IAAI3C,KAAA,CAAA4C,GAAG,CAACnB,KAAK,CAAC;UAChCiC,IAAI,CAACkE,KAAK,GAAG,IAAIrG,eAAe,CAAC;YAC/BwG,IAAI,EAAEpF,SAAS,CAACoF,IAAI;YACpBC,IAAI,EAAErF,SAAS,CAACqF,IAAI;YACpBC,QAAQ,EAAEtF,SAAS,CAACsF,QAAQ;YAC5BH,IAAI,EAAEpE,IAAI,CAACoE,IAAI;YACf5G,GAAG,EAAEwC,IAAI,CAACxC;WACX,CAAC;QACJ,CAAC,MAAM;UACLwC,IAAI,CAACkE,KAAK,GAAG,IAAIrG,eAAe,CAACE,KAAK,CAAC;QACzC;QACA,IAAI,CAAC8B,UAAU,CAAC2E,GAAG,CAACzG,KAAK,EAAEiC,IAAI,CAACkE,KAAM,CAAC;MACzC;IACF,CAAC,MAAM,IAAIlE,IAAI,CAACoE,IAAI,IAAIpE,IAAI,CAACxC,GAAG,EAAE;MAChC;MACA,IAAI,IAAI,CAACqC,UAAU,CAACoE,GAAG,CAACjE,IAAI,CAACxC,GAAG,CAAC,EAAE;QACjCwC,IAAI,CAACkE,KAAK,GAAG,IAAI,CAACrE,UAAU,CAACsE,GAAG,CAACnE,IAAI,CAACxC,GAAG,CAAC;MAC5C,CAAC,MAAM;QACLwC,IAAI,CAACkE,KAAK,GAAG,IAAIhI,OAAA,CAAAuI,KAAU,CAAC;UAC1BL,IAAI,EAAEpE,IAAI,CAACoE,IAAI;UACf5G,GAAG,EAAEwC,IAAI,CAACxC;SACX,CAAC;QACF,IAAI,CAACqC,UAAU,CAAC2E,GAAG,CAACxE,IAAI,CAACxC,GAAG,EAAEwC,IAAI,CAACkE,KAAM,CAAC;MAC5C;IACF;IAEA,IACE,OAAOlE,IAAI,CAAC0E,aAAa,KAAK,UAAU,IACxC1E,IAAI,CAAC0E,aAAa,KAAK,KAAK,EAC5B;MACA1E,IAAI,CAAC0E,aAAa,GAAGnI,QAAA,CAAAoI,oBAAoB;IAC3C;IAEA,OAAO3E,IAAI;EACb;EAEA;;;;EAIQa,cAAcA,CAACC,MAAc;IACnC,OAAOA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG;EACtC;EAEA;;;;EAIQ2B,gBAAgBA,CAACC,MAA0C;IACjE,OAAOtG,aAAA,CAAAW,OAAE,CAAC0G,SAAS,CAACf,MAAM,CAAC;EAC7B;EAEQjC,iBAAiBA,CACvBT,IAAmB,EACnBM,GAAkB,EAClBC,IAAQ;IAER;IACA,MAAM5C,OAAO,GAAG,EAAa;IAC7B2C,GAAG,CAAC3C,OAAO,CAACiH,OAAO,CAAC,CAACC,KAAK,EAAErH,GAAG,KAAI;MACjCG,OAAO,CAACH,GAAG,CAAC,GAAGqH,KAAK;IACtB,CAAC,CAAC;IAEF,OAAO;MACLnD,MAAM,EAAE1B,IAAI;MACZO,IAAI,EAAEA,IAAS;MACf5C,OAAO;MACPmD,MAAM,EAAER,GAAG,CAACQ,MAAM;MAClBgE,UAAU,EAAExE,GAAG,CAACwE,UAAU;MAE1B;MACA/E,OAAO,EAAE;QACPgF,WAAW,EAAEzE,GAAG,CAAC3B;;KAEpB;EACH;EAEA;;;;;EAKQ,MAAMyD,8BAA8BA,CAC1CpB,QAAuB;IAEvB,IAAIgE,WAAW,GAAGhE,QAAQ,CAACrD,OAAO,CAACwG,GAAG,CAAC,cAAc,CAAC;IACtD,IAAIa,WAAW,KAAK,IAAI,EAAE;MACxB;MACA,OAAOhE,QAAQ,CAACe,IAAI,EAAE;IACxB;IACAiD,WAAW,GAAGA,WAAW,CAACzH,WAAW,EAAE;IACvC,IAAIyH,WAAW,CAACjC,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MAC5C,IAAIxC,IAAI,GAAG,MAAMS,QAAQ,CAACe,IAAI,EAAE;MAChC,IAAI;QACFxB,IAAI,GAAGyB,IAAI,CAACC,KAAK,CAAC1B,IAAI,CAAC;MACzB,CAAC,CAAC,OAAAvC,EAAA,EAAM;QACN;MAAA;MAEF,OAAOuC,IAAU;IACnB,CAAC,MAAM,IAAIyE,WAAW,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;MACvC,OAAOjE,QAAQ,CAACe,IAAI,EAAE;IACxB,CAAC,MAAM;MACL;MACA,OAAOf,QAAQ,CAACmB,IAAI,EAAE;IACxB;EACF;EAEA;;;;;;;;EAQQ,OAAO4B,mBAAmBA,CAChCmB,gBAA0C,EAC1CxB,QAAgB;IAEhB,MAAMyB,MAAM,GAAG,KAAKzB,QAAQ,IAAI;IAChC,KAAK,MAAM0B,WAAW,IAAIF,gBAAgB,EAAE;MAC1C,MAAMG,eAAe,GACnBD,WAAW,CAACzH,OAAO,CAAC,cAAc,CAAC,IAAI,0BAA0B;MACnE,MAAM2H,QAAQ,GAAG,KAAK5B,QAAQ,qBAAqB2B,eAAe,UAAU;MAC5E,MAAMC,QAAQ;MACd,IAAI,OAAOF,WAAW,CAACG,OAAO,KAAK,QAAQ,EAAE;QAC3C,MAAMH,WAAW,CAACG,OAAO;MAC3B,CAAC,MAAM;QACL,OAAOH,WAAW,CAACG,OAAO;MAC5B;MACA,MAAM,MAAM;IACd;IACA,MAAMJ,MAAM;EACd;;AA5VFK,OAAA,CAAA9F,MAAA,GAAAA,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}