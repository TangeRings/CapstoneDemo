{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Import other components and icons as before\nimport FileUploadPopup from './FileUploadPopup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [isUploadPopupOpen, setUploadPopupOpen] = useState(false);\n  const onUploadButtonClick = () => {\n    // Open the popup\n    setUploadPopupOpen(true);\n  };\n  const handleFileSelected = async event => {\n    setUploadPopupOpen(false); // Close the popup\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // The rest of your file upload logic as before...\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"upload\",\n          component: \"span\",\n          onClick: onUploadButtonClick,\n          children: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploadPopup, {\n      open: isUploadPopupOpen,\n      onClose: () => setUploadPopupOpen(false),\n      onFileSelected: handleFileSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentRow, \"7NZ918TugkNvi5/od8n7UmK/9Lw=\");\n_c = StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","FileUploadPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentRow","student","_s","isUploadPopupOpen","setUploadPopupOpen","onUploadButtonClick","handleFileSelected","event","file","target","files","children","TableRow","TableCell","name","fileName","_jsxFileName","lineNumber","columnNumber","IconButton","component","onClick","UploadFileIcon","open","onClose","onFileSelected","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// Import other components and icons as before\r\nimport FileUploadPopup from './FileUploadPopup';\r\n\r\nconst StudentRow = ({ student }) => {\r\n  const [isUploadPopupOpen, setUploadPopupOpen] = useState(false);\r\n\r\n  const onUploadButtonClick = () => {\r\n    // Open the popup\r\n    setUploadPopupOpen(true);\r\n  };\r\n\r\n  const handleFileSelected = async (event) => {\r\n    setUploadPopupOpen(false); // Close the popup\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // The rest of your file upload logic as before...\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>{student.name}</TableCell>\r\n        <TableCell>\r\n          <IconButton aria-label=\"upload\" component=\"span\" onClick={onUploadButtonClick}>\r\n            <UploadFileIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        {/* Other cells */}\r\n      </TableRow>\r\n      <FileUploadPopup\r\n        open={isUploadPopupOpen}\r\n        onClose={() => setUploadPopupOpen(false)}\r\n        onFileSelected={handleFileSelected}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAOC,KAAK,IAAK;IAC1CH,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B,MAAMI,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;;IAEX;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACe,QAAQ;MAAAD,QAAA,gBACPd,OAAA,CAACgB,SAAS;QAAAF,QAAA,EAAEV,OAAO,CAACa;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACrCrB,OAAA,CAACgB,SAAS;QAAAF,QAAA,eACRd,OAAA,CAACsB,UAAU;UAAC,cAAW,QAAQ;UAACC,SAAS,EAAC,MAAM;UAACC,OAAO,EAAEhB,mBAAoB;UAAAM,QAAA,eAC5Ed,OAAA,CAACyB,cAAc;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEJ,CAAC,eACXrB,OAAA,CAACF,eAAe;MACd4B,IAAI,EAAEpB,iBAAkB;MACxBqB,OAAO,EAAEA,CAAA,KAAMpB,kBAAkB,CAAC,KAAK,CAAE;MACzCqB,cAAc,EAAEnB;IAAmB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAChB,EAAA,CAlCIF,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}