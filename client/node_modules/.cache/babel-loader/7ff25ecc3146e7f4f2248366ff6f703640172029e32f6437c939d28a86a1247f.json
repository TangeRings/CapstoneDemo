{"ast":null,"code":"// In Uploader.js or where you handle the file upload\nhandleFileUpload = async file => {\n  const formData = new FormData();\n  formData.append('file', file);\n  try {\n    const response = await fetch('/upload', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) throw new Error('Failed to upload file.');\n    const result = await response.text();\n    console.log(result); // Or handle the success response as needed\n  } catch (error) {\n    console.error('Error uploading file:', error);\n    alert('File upload failed!');\n  }\n};","map":{"version":3,"names":["handleFileUpload","file","formData","FormData","append","response","fetch","method","body","ok","Error","result","text","console","log","error","alert"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/Uploader.js"],"sourcesContent":["// In Uploader.js or where you handle the file upload\r\nhandleFileUpload = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n\r\n  try {\r\n    const response = await fetch('/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Failed to upload file.');\r\n    \r\n    const result = await response.text();\r\n    console.log(result); // Or handle the success response as needed\r\n  } catch (error) {\r\n    console.error('Error uploading file:', error);\r\n    alert('File upload failed!');\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACAA,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EACjC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAE7B,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAE3D,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CC,KAAK,CAAC,qBAAqB,CAAC;EAC9B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}