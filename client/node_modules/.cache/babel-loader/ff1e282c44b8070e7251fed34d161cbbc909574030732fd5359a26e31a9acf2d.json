{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport FileList from './FileList'; // Assuming this is the path to your FileList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student,\n  removeStudent,\n  onFileUpload\n}) => {\n  _s();\n  // Placeholder for the file input reference\n  const fileInputRef = React.useRef(null);\n\n  // Function to trigger file input click event\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Function to handle file selection\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Get the first file\n    if (file) {\n      // Call the parent component's onFileUpload with the student ID and selected file\n      onFileUpload(student.id, file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(FileList, {\n        files: student.files,\n        onFileUpload: file => onFileUpload(student.id, file),\n        onFileDelete: fileId => {/* Implement file deletion logic */}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeStudent(student.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadClick,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Record Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentRow, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","FileList","jsxDEV","_jsxDEV","StudentRow","student","removeStudent","onFileUpload","_s","fileInputRef","useRef","handleUploadClick","current","click","handleFileChange","event","file","target","files","id","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onFileDelete","fileId","onClick","type","ref","onChange","style","display","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React from 'react';\r\nimport FileList from './FileList'; // Assuming this is the path to your FileList component\r\n\r\nconst StudentRow = ({ student, removeStudent, onFileUpload }) => {\r\n    // Placeholder for the file input reference\r\n    const fileInputRef = React.useRef(null);\r\n\r\n    // Function to trigger file input click event\r\n    const handleUploadClick = () => {\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    // Function to handle file selection\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0]; // Get the first file\r\n        if (file) {\r\n            // Call the parent component's onFileUpload with the student ID and selected file\r\n            onFileUpload(student.id, file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{student.name}</td>\r\n            <td>\r\n                {/* FileList component to display and manage student's files */}\r\n                <FileList \r\n                    files={student.files} \r\n                    onFileUpload={(file) => onFileUpload(student.id, file)} \r\n                    onFileDelete={(fileId) => {/* Implement file deletion logic */}} \r\n                />\r\n            </td>\r\n            <td>\r\n                {/* Implement additional columns as needed */}\r\n            </td>\r\n            <td>\r\n                <button onClick={() => removeStudent(student.id)}>Remove</button>\r\n            </td>\r\n            <td>\r\n                {/* Upload file input and trigger button */}\r\n                <input\r\n                    type=\"file\"\r\n                    ref={fileInputRef}\r\n                    onChange={handleFileChange}\r\n                    style={{ display: 'none' }}\r\n                />\r\n                <button onClick={handleUploadClick}>Upload File</button>\r\n                {/* Placeholder for audio recording functionality */}\r\n                <button>Record Audio</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC7D;EACA,MAAMC,YAAY,GAAGT,KAAK,CAACU,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BF,YAAY,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAIF,IAAI,EAAE;MACN;MACAT,YAAY,CAACF,OAAO,CAACc,EAAE,EAAEH,IAAI,CAAC;IAClC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAKf,OAAO,CAACgB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBtB,OAAA;MAAAiB,QAAA,eAEIjB,OAAA,CAACF,QAAQ;QACLiB,KAAK,EAAEb,OAAO,CAACa,KAAM;QACrBX,YAAY,EAAGS,IAAI,IAAKT,YAAY,CAACF,OAAO,CAACc,EAAE,EAAEH,IAAI,CAAE;QACvDU,YAAY,EAAGC,MAAM,IAAK,CAAC;MAAqC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC,eACLtB,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMtB,aAAa,CAACD,OAAO,CAACc,EAAE,CAAE;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACLtB,OAAA;MAAAiB,QAAA,gBAEIjB,OAAA;QACI0B,IAAI,EAAC,MAAM;QACXC,GAAG,EAAErB,YAAa;QAClBsB,QAAQ,EAAEjB,gBAAiB;QAC3BkB,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFtB,OAAA;QAAQyB,OAAO,EAAEjB,iBAAkB;QAAAS,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAExDtB,OAAA;QAAAiB,QAAA,EAAQ;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACjB,EAAA,CAjDIJ,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}