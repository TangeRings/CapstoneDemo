{"ast":null,"code":"import { google } from 'googleapis';\nconst GOOGLE_DRIVE_FOLDER_ID = process.env.GOOGLE_DRIVE_FOLDER_ID;\nconst oauth2Client = new google.auth.GoogleAuth({\n  keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS,\n  scopes: ['https://www.googleapis.com/auth/drive.file']\n});\nconst drive = google.drive({\n  version: 'v3',\n  auth: oauth2Client\n});\nasync function uploadFile(file) {\n  try {\n    const {\n      data\n    } = await drive.files.create({\n      requestBody: {\n        name: file.name,\n        parents: [GOOGLE_DRIVE_FOLDER_ID]\n      },\n      media: {\n        mimeType: file.type,\n        body: file.stream()\n      }\n    });\n    if (data.id) {\n      return {\n        success: true,\n        itemName: file.name,\n        uploadDate: new Date().toISOString().split('T')[0]\n      };\n    }\n    return {\n      success: false\n    };\n  } catch (error) {\n    console.error('Error uploading file:', error);\n    return {\n      success: false\n    };\n  }\n}\nexport default uploadFile;","map":{"version":3,"names":["google","GOOGLE_DRIVE_FOLDER_ID","process","env","oauth2Client","auth","GoogleAuth","keyFile","GOOGLE_APPLICATION_CREDENTIALS","scopes","drive","version","uploadFile","file","data","files","create","requestBody","name","parents","media","mimeType","type","body","stream","id","success","itemName","uploadDate","Date","toISOString","split","error","console"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import { google } from 'googleapis';\r\n\r\nconst GOOGLE_DRIVE_FOLDER_ID = process.env.GOOGLE_DRIVE_FOLDER_ID;\r\n\r\nconst oauth2Client = new google.auth.GoogleAuth({\r\n    keyFile: process.env.GOOGLE_APPLICATION_CREDENTIALS,\r\n    scopes: ['https://www.googleapis.com/auth/drive.file'],\r\n});\r\n\r\nconst drive = google.drive({\r\n    version: 'v3',\r\n    auth: oauth2Client,\r\n});\r\n\r\nasync function uploadFile(file) {\r\n    try {\r\n        const { data } = await drive.files.create({\r\n            requestBody: {\r\n                name: file.name,\r\n                parents: [GOOGLE_DRIVE_FOLDER_ID],\r\n            },\r\n            media: {\r\n                mimeType: file.type,\r\n                body: file.stream(),\r\n            },\r\n        });\r\n\r\n        if (data.id) {\r\n            return { success: true, itemName: file.name, uploadDate: new Date().toISOString().split('T')[0] };\r\n        }\r\n        return { success: false };\r\n    } catch (error) {\r\n        console.error('Error uploading file:', error);\r\n        return { success: false };\r\n    }\r\n}\r\n\r\nexport default uploadFile;\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,MAAMC,sBAAsB,GAAGC,OAAO,CAACC,GAAG,CAACF,sBAAsB;AAEjE,MAAMG,YAAY,GAAG,IAAIJ,MAAM,CAACK,IAAI,CAACC,UAAU,CAAC;EAC5CC,OAAO,EAAEL,OAAO,CAACC,GAAG,CAACK,8BAA8B;EACnDC,MAAM,EAAE,CAAC,4CAA4C;AACzD,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAGV,MAAM,CAACU,KAAK,CAAC;EACvBC,OAAO,EAAE,IAAI;EACbN,IAAI,EAAED;AACV,CAAC,CAAC;AAEF,eAAeQ,UAAUA,CAACC,IAAI,EAAE;EAC5B,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,KAAK,CAACC,MAAM,CAAC;MACtCC,WAAW,EAAE;QACTC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,OAAO,EAAE,CAAClB,sBAAsB;MACpC,CAAC;MACDmB,KAAK,EAAE;QACHC,QAAQ,EAAER,IAAI,CAACS,IAAI;QACnBC,IAAI,EAAEV,IAAI,CAACW,MAAM,CAAC;MACtB;IACJ,CAAC,CAAC;IAEF,IAAIV,IAAI,CAACW,EAAE,EAAE;MACT,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,QAAQ,EAAEd,IAAI,CAACK,IAAI;QAAEU,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MAAE,CAAC;IACrG;IACA,OAAO;MAAEL,OAAO,EAAE;IAAM,CAAC;EAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO;MAAEN,OAAO,EAAE;IAAM,CAAC;EAC7B;AACJ;AAEA,eAAed,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}