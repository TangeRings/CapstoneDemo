{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\DashboardTable.js\",\n  _s = $RefreshSig$();\n// DashboardTable.js\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, IconButton, TextField } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Submit from './Submit'; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardTable = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    name: 'Claire Johnson',\n    submissions: [],\n    grade: '',\n    comments: ''\n  }]);\n  const handleNewSubmission = (newSubmission, index) => {\n    // Update submissions for the student at the given index\n    const updatedStudents = [...students];\n    updatedStudents[index].submissions.push(newSubmission);\n    setStudents(updatedStudents);\n  };\n  const handleNameChange = (name, index) => {\n    // Update the name for the student at the given index\n    const updatedStudents = [...students];\n    updatedStudents[index].name = name;\n    setStudents(updatedStudents);\n  };\n  const addNewRow = () => {\n    // Add a new student row with default values\n    setStudents([...students, {\n      name: '',\n      submissions: [],\n      grade: '',\n      comments: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: student.name,\n                onChange: e => handleNameChange(e.target.value, index),\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Submit, {\n                onFileUpload: newSubmission => handleNewSubmission(newSubmission, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: student.submissions.map((submission, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: new Date(submission.submittedOn).toLocaleDateString()\n              }, sIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: student.grade,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].grade = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: student.comments,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].comments = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: addNewRow,\n      style: {\n        float: 'right',\n        margin: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DashboardTable, \"ZhS3uGfccK2lznqF4xNBUOoJ+4c=\");\n_c = DashboardTable;\nexport default DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","IconButton","TextField","AddCircleOutlineIcon","Submit","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardTable","_s","students","setStudents","name","submissions","grade","comments","handleNewSubmission","newSubmission","index","updatedStudents","push","handleNameChange","addNewRow","children","component","style","width","fileName","_jsxFileName","lineNumber","columnNumber","align","map","student","scope","value","onChange","e","target","placeholder","onFileUpload","submission","sIndex","Date","submittedOn","toLocaleDateString","onClick","float","margin","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/DashboardTable.js"],"sourcesContent":["// DashboardTable.js\r\nimport React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, IconButton, TextField } from '@mui/material';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport Submit from './Submit'; // Make sure the path is correct\r\n\r\nconst DashboardTable = () => {\r\n  const [students, setStudents] = useState([\r\n    { name: 'Claire Johnson', submissions: [], grade: '', comments: '' }\r\n  ]);\r\n\r\n  const handleNewSubmission = (newSubmission, index) => {\r\n    // Update submissions for the student at the given index\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index].submissions.push(newSubmission);\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const handleNameChange = (name, index) => {\r\n    // Update the name for the student at the given index\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index].name = name;\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const addNewRow = () => {\r\n    // Add a new student row with default values\r\n    setStudents([...students, { name: '', submissions: [], grade: '', comments: '' }]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} style={{ width: '100%' }}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"center\">Submission</TableCell>\r\n              <TableCell align=\"center\">Date</TableCell>\r\n              <TableCell align=\"center\">Grade</TableCell>\r\n              <TableCell align=\"center\">Comments</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {students.map((student, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <TextField\r\n                    value={student.name}\r\n                    onChange={(e) => handleNameChange(e.target.value, index)}\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <Submit onFileUpload={(newSubmission) => handleNewSubmission(newSubmission, index)} />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {student.submissions.map((submission, sIndex) => (\r\n                    <div key={sIndex}>\r\n                      {new Date(submission.submittedOn).toLocaleDateString()}\r\n                    </div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TextField\r\n                    value={student.grade}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].grade = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter grade\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <TextField\r\n                    value={student.comments}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].comments = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter comments\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <IconButton onClick={addNewRow} style={{ float: 'right', margin: '10px' }}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardTable;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}