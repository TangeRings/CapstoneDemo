{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\n// StudentRow.js\nimport React, { useState } from 'react';\nimport { Button, Grid, TextField } from '@mui/core-material';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = () => {\n  _s();\n  const [itemName, setItemName] = useState('');\n  const [date, setDate] = useState('');\n  const handleFileUpload = () => {\n    // You can trigger the file upload functionality from Uploader.js here\n    // For now, let's just log a message to indicate the button click\n    console.log('File upload button clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Student Name\",\n        defaultValue: \"Claire\",\n        InputProps: {\n          readOnly: true\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Item\",\n        value: itemName,\n        onChange: e => setItemName(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }, this),\n        onClick: handleFileUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentRow, \"s71OeWJk+DWFD+Y7/6Eh95Ids74=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","Button","Grid","TextField","CloudUploadIcon","jsxDEV","_jsxDEV","StudentRow","_s","itemName","setItemName","date","setDate","handleFileUpload","console","log","container","spacing","alignItems","children","item","xs","label","defaultValue","InputProps","readOnly","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","variant","color","startIcon","onClick","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["\r\n\r\n\r\n// StudentRow.js\r\nimport React, { useState } from 'react';\r\nimport { Button, Grid, TextField } from '@mui/core-material';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nconst StudentRow = () => {\r\n  const [itemName, setItemName] = useState('');\r\n  const [date, setDate] = useState('');\r\n\r\n  const handleFileUpload = () => {\r\n    // You can trigger the file upload functionality from Uploader.js here\r\n    // For now, let's just log a message to indicate the button click\r\n    console.log('File upload button clicked');\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} alignItems=\"center\">\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          label=\"Student Name\"\r\n          defaultValue=\"Claire\"\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          label=\"Item\"\r\n          value={itemName}\r\n          onChange={(e) => setItemName(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          label=\"Date\"\r\n          value={date}\r\n          onChange={(e) => setDate(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<CloudUploadIcon />}\r\n          onClick={handleFileUpload}\r\n        >\r\n          Upload\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}