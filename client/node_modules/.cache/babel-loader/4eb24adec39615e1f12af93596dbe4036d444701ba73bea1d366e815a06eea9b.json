{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [isUploading, setUploading] = useState(false);\n\n  // Function to initialize the Google API client\n  const initClient = () => {\n    gapi.client.init({\n      apiKey: process.env.REACT_APP_API_KEY,\n      clientId: process.env.REACT_APP_CLIENT_ID,\n      scope: 'https://www.googleapis.com/auth/drive.file',\n      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest']\n    }).then(() => {\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        // Handle the sign-in here, update state if necessary\n      });\n    });\n  };\n\n  // Load the Google API client and initialize it on component mount\n  React.useEffect(() => {\n    gapi.load('client:auth2', initClient);\n  }, []);\n\n  // Function to handle the file upload\n  const handleUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setUploading(true);\n    const folderId = process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID;\n    var fileMetadata = {\n      'name': file.name,\n      'parents': [folderId]\n    };\n    var media = {\n      mimeType: file.type,\n      body: file\n    };\n    try {\n      const response = await gapi.client.drive.files.create({\n        resource: fileMetadata,\n        media: media,\n        fields: 'id'\n      });\n      setUploading(false);\n      console.log('File uploaded successfully, file ID:', response.result.id);\n      // Here you might want to update the UI or state to reflect the successful upload\n    } catch (error) {\n      setUploading(false);\n      console.error('Error uploading the file:', error);\n      // Handle the error in the UI, for example by showing an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: `file-upload-${student.id}`,\n        onChange: handleUpload,\n        disabled: isUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `file-upload-${student.id}`,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"upload file\",\n          component: \"span\",\n          disabled: isUploading,\n          children: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uploading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentRow, \"4/kUzTP2UGJixrcGTd5TXiY+p/0=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","TableRow","TableCell","IconButton","UploadFileIcon","gapi","jsxDEV","_jsxDEV","StudentRow","student","_s","isUploading","setUploading","initClient","client","init","apiKey","process","env","REACT_APP_API_KEY","clientId","REACT_APP_CLIENT_ID","scope","discoveryDocs","then","auth2","getAuthInstance","signIn","useEffect","load","handleUpload","event","file","target","files","folderId","REACT_APP_GOOGLE_DRIVE_FOLDER_ID","fileMetadata","name","media","mimeType","type","body","response","drive","create","resource","fields","console","log","result","id","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onChange","disabled","htmlFor","component","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport { gapi } from 'gapi-script';\r\n\r\nconst StudentRow = ({ student }) => {\r\n  const [isUploading, setUploading] = useState(false);\r\n\r\n  // Function to initialize the Google API client\r\n  const initClient = () => {\r\n    gapi.client.init({\r\n      apiKey: process.env.REACT_APP_API_KEY,\r\n      clientId: process.env.REACT_APP_CLIENT_ID,\r\n      scope: 'https://www.googleapis.com/auth/drive.file',\r\n      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'],\r\n    }).then(() => {\r\n      gapi.auth2.getAuthInstance().signIn().then(() => {\r\n        // Handle the sign-in here, update state if necessary\r\n      });\r\n    });\r\n  };\r\n\r\n  // Load the Google API client and initialize it on component mount\r\n  React.useEffect(() => {\r\n    gapi.load('client:auth2', initClient);\r\n  }, []);\r\n\r\n  // Function to handle the file upload\r\n  const handleUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setUploading(true);\r\n\r\n    const folderId = process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID;\r\n    var fileMetadata = {\r\n      'name': file.name,\r\n      'parents': [folderId]\r\n    };\r\n    var media = {\r\n      mimeType: file.type,\r\n      body: file\r\n    };\r\n\r\n    try {\r\n      const response = await gapi.client.drive.files.create({\r\n        resource: fileMetadata,\r\n        media: media,\r\n        fields: 'id'\r\n      });\r\n\r\n      setUploading(false);\r\n      console.log('File uploaded successfully, file ID:', response.result.id);\r\n      // Here you might want to update the UI or state to reflect the successful upload\r\n    } catch (error) {\r\n      setUploading(false);\r\n      console.error('Error uploading the file:', error);\r\n      // Handle the error in the UI, for example by showing an error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{student.name}</TableCell>\r\n      <TableCell>\r\n        <input\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          id={`file-upload-${student.id}`}\r\n          onChange={handleUpload}\r\n          disabled={isUploading}\r\n        />\r\n        <label htmlFor={`file-upload-${student.id}`}>\r\n          <IconButton aria-label=\"upload file\" component=\"span\" disabled={isUploading}>\r\n            <UploadFileIcon />\r\n          </IconButton>\r\n        </label>\r\n        {isUploading && <p>Uploading...</p>}\r\n      </TableCell>\r\n      {/* Other cells */}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}