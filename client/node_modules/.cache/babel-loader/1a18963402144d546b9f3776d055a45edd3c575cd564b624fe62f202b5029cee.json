{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUploader from './FileUploader';\nimport FileList from './FileList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student,\n  removeStudent\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleUploadSuccess = file => {\n    const newFile = {\n      name: file.name,\n      date: new Date().toISOString().slice(0, 10) // Keeps only the date part\n    };\n    setFiles([...files, newFile]);\n  };\n\n  // ...rest of the StudentRow component\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [files.length === 0 ?\n    /*#__PURE__*/\n    // If no files uploaded, just show the student's name and the upload button\n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_student_name\",\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeStudent(student.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) : files.map((file, index) =>\n    /*#__PURE__*/\n    // For each file, display its name and upload date in separate columns\n    _jsxDEV(\"tr\", {\n      children: [index === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_student_name\",\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this), index !== 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_student_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_file\",\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_date\",\n        children: file.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell_other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), index === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n        rowSpan: files.length,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeStudent(student.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"5\",\n        className: \"action-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(FileUploader, {\n          onUploadSuccess: handleUploadSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n\n  // ...\n};\n_s(StudentRow, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","FileUploader","FileList","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentRow","student","removeStudent","_s","files","setFiles","handleUploadSuccess","file","newFile","name","date","Date","toISOString","slice","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","map","index","rowSpan","colSpan","onUploadSuccess","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUploader from './FileUploader';\r\nimport FileList from './FileList';\r\n\r\nconst StudentRow = ({ student, removeStudent }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleUploadSuccess = (file) => {\r\n    const newFile = {\r\n      name: file.name,\r\n      date: new Date().toISOString().slice(0, 10) // Keeps only the date part\r\n    };\r\n    setFiles([...files, newFile]);\r\n  };\r\n\r\n  // ...rest of the StudentRow component\r\n\r\nreturn (\r\n  <>\r\n    {files.length === 0 ? (\r\n      // If no files uploaded, just show the student's name and the upload button\r\n      <tr>\r\n        <td className=\"cell_student_name\">{student.name}</td>\r\n        <td className=\"cell_file\"></td>\r\n        <td className=\"cell_date\"></td>\r\n        <td className=\"cell_other\"></td>\r\n        <td>\r\n          <button onClick={() => removeStudent(student.id)}>Remove</button>\r\n        </td>\r\n      </tr>\r\n    ) : (\r\n      files.map((file, index) => (\r\n        // For each file, display its name and upload date in separate columns\r\n        <tr key={index}>\r\n          {index === 0 && <td className=\"cell_student_name\">{student.name}</td>}\r\n          {index !== 0 && <td className=\"cell_student_name\"></td>}\r\n          <td className=\"cell_file\">{file.name}</td>\r\n          <td className=\"cell_date\">{file.date}</td>\r\n          <td className=\"cell_other\"></td>\r\n          {index === 0 && (\r\n            <td rowSpan={files.length}>\r\n              <button onClick={() => removeStudent(student.id)}>Remove</button>\r\n            </td>\r\n          )}\r\n        </tr>\r\n      ))\r\n    )}\r\n    <tr>\r\n      <td colSpan=\"5\" className=\"action-bar-container\">\r\n        <FileUploader onUploadSuccess={handleUploadSuccess} />\r\n      </td>\r\n    </tr>\r\n  </>\r\n);\r\n\r\n// ...\r\n\r\n};\r\n\r\nexport default StudentRow;\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}