{"ast":null,"code":"// Uploader.js\nclass Uploader {\n  static uploadFile(file) {\n    return new Promise((resolve, reject) => {\n      // Mocking a server-side upload. Replace this logic with an actual API call to your server.\n      console.log(`Uploading file: ${file.name}`);\n\n      // Simulate file upload delay\n      setTimeout(() => {\n        // Assuming the file upload is successful\n        console.log(`File uploaded: ${file.name}`);\n        resolve({\n          success: true\n        });\n        // For an error, you would use reject({ success: false, error: 'Error message' });\n      }, 1000);\n    });\n  }\n}\nexport default Uploader;","map":{"version":3,"names":["Uploader","uploadFile","file","Promise","resolve","reject","console","log","name","setTimeout","success"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/Uploader.js"],"sourcesContent":["// Uploader.js\r\nclass Uploader {\r\n  static uploadFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n      // Mocking a server-side upload. Replace this logic with an actual API call to your server.\r\n      console.log(`Uploading file: ${file.name}`);\r\n\r\n      // Simulate file upload delay\r\n      setTimeout(() => {\r\n        // Assuming the file upload is successful\r\n        console.log(`File uploaded: ${file.name}`);\r\n        resolve({ success: true });\r\n        // For an error, you would use reject({ success: false, error: 'Error message' });\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Uploader;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,CAAC;EACb,OAAOC,UAAUA,CAACC,IAAI,EAAE;IACtB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC;MACAC,OAAO,CAACC,GAAG,CAAE,mBAAkBL,IAAI,CAACM,IAAK,EAAC,CAAC;;MAE3C;MACAC,UAAU,CAAC,MAAM;QACf;QACAH,OAAO,CAACC,GAAG,CAAE,kBAAiBL,IAAI,CAACM,IAAK,EAAC,CAAC;QAC1CJ,OAAO,CAAC;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;QAC1B;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;AACF;AAEA,eAAeV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}