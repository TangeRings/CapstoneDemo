{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ActionBar from './ActionBar';\nimport FileUploader from './FileUploader'; // Import the FileUploader component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = () => {\n  _s();\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const handleUploadSuccess = file => {\n    // Do something with the uploaded file, e.g., set it to state\n    setUploadedFile(file);\n    // You can also perform other actions like sending the file to a server\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Claire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(ActionBar, {\n        onUploadClick: () => {\n          // Define what happens on upload click\n          // For example, you can open the file uploader\n          // This can be customized based on your application's needs\n          console.log('Upload clicked');\n        },\n        onRecordClick: () => {/* Handle record click */},\n        onCalendarSyncClick: () => {/* Handle calendar sync click */},\n        onEmailClick: () => {/* Handle email click */},\n        onDownloadClick: () => {/* Handle download click */}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), uploadedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File uploaded: \", uploadedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        onUploadSuccess: handleUploadSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentRow, \"Qob18wiaweYayspIGG7oNo9XQM4=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","ActionBar","FileUploader","jsxDEV","_jsxDEV","StudentRow","_s","uploadedFile","setUploadedFile","handleUploadSuccess","file","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadClick","console","log","onRecordClick","onCalendarSyncClick","onEmailClick","onDownloadClick","name","onUploadSuccess","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ActionBar from './ActionBar';\r\nimport FileUploader from './FileUploader'; // Import the FileUploader component\r\n\r\nconst StudentRow = () => {\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n\r\n  const handleUploadSuccess = (file) => {\r\n    // Do something with the uploaded file, e.g., set it to state\r\n    setUploadedFile(file);\r\n    // You can also perform other actions like sending the file to a server\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>Claire</td>\r\n      <td>\r\n        <ActionBar \r\n          onUploadClick={() => {\r\n            // Define what happens on upload click\r\n            // For example, you can open the file uploader\r\n            // This can be customized based on your application's needs\r\n            console.log('Upload clicked');\r\n          }}\r\n          onRecordClick={() => {/* Handle record click */}}\r\n          onCalendarSyncClick={() => {/* Handle calendar sync click */}}\r\n          onEmailClick={() => {/* Handle email click */}}\r\n          onDownloadClick={() => {/* Handle download click */}}\r\n        />\r\n        {uploadedFile && <p>File uploaded: {uploadedFile.name}</p>}\r\n        {/* Render FileUploader component */}\r\n        <FileUploader onUploadSuccess={handleUploadSuccess} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,mBAAmB,GAAIC,IAAI,IAAK;IACpC;IACAF,eAAe,CAACE,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfX,OAAA;MAAAO,QAAA,gBACEP,OAAA,CAACH,SAAS;QACRe,aAAa,EAAEA,CAAA,KAAM;UACnB;UACA;UACA;UACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC/B,CAAE;QACFC,aAAa,EAAEA,CAAA,KAAM,CAAC,0BAA2B;QACjDC,mBAAmB,EAAEA,CAAA,KAAM,CAAC,iCAAkC;QAC9DC,YAAY,EAAEA,CAAA,KAAM,CAAC,yBAA0B;QAC/CC,eAAe,EAAEA,CAAA,KAAM,CAAC;MAA6B;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,EACDR,YAAY,iBAAIH,OAAA;QAAAO,QAAA,GAAG,iBAAe,EAACJ,YAAY,CAACgB,IAAI;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1DX,OAAA,CAACF,YAAY;QAACsB,eAAe,EAAEf;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAACT,EAAA,CA/BID,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}