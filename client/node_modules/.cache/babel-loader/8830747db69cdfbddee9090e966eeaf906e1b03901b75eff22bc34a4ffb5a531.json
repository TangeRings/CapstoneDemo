{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\AudioRecord.js\",\n  _s = $RefreshSig$();\n// AudioRecord.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecord = ({\n  onNewRecord\n}) => {\n  _s();\n  const [recordName, setRecordName] = useState('');\n  const handleRecord = () => {\n    // Logic to handle the actual audio recording...\n    // For the sake of this example, let's just create a dummy record\n    const newRecord = {\n      name: recordName || \"Catchup Meeting\",\n      // Use the entered name or a default\n      date: new Date().toISOString().slice(0, 10) // Today's date\n    };\n    onNewRecord(newRecord);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recordName,\n      placeholder: \"Record name\",\n      onChange: e => setRecordName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRecord,\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecord, \"ak8Qiu9aJZVoGvCrrGoZhMDyXT4=\");\n_c = AudioRecord;\nexport default AudioRecord;\nvar _c;\n$RefreshReg$(_c, \"AudioRecord\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AudioRecord","onNewRecord","_s","recordName","setRecordName","handleRecord","newRecord","name","date","Date","toISOString","slice","children","type","value","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/AudioRecord.js"],"sourcesContent":["// AudioRecord.js\r\nimport React, { useState } from 'react';\r\n\r\nconst AudioRecord = ({ onNewRecord }) => {\r\n  const [recordName, setRecordName] = useState('');\r\n\r\n  const handleRecord = () => {\r\n    // Logic to handle the actual audio recording...\r\n    // For the sake of this example, let's just create a dummy record\r\n    const newRecord = {\r\n      name: recordName || \"Catchup Meeting\", // Use the entered name or a default\r\n      date: new Date().toISOString().slice(0, 10), // Today's date\r\n    };\r\n    onNewRecord(newRecord);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={recordName}\r\n        placeholder=\"Record name\"\r\n        onChange={e => setRecordName(e.target.value)}\r\n      />\r\n      <button onClick={handleRecord}>Record</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecord;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAEJ,UAAU,IAAI,iBAAiB;MAAE;MACvCK,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAE;IAC/C,CAAC;IACDV,WAAW,CAACK,SAAS,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEX,UAAW;MAClBY,WAAW,EAAC,aAAa;MACzBC,QAAQ,EAAEC,CAAC,IAAIb,aAAa,CAACa,CAAC,CAACC,MAAM,CAACJ,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA;MAAQwB,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACpB,EAAA,CAxBIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}