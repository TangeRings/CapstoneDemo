{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\n// AudioRecorder.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onRecordingComplete\n}) => {\n  _s();\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      let audioChunks = [];\n      recorder.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      recorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        onRecordingComplete(audioUrl);\n        audioChunks = [];\n      };\n      recorder.start();\n      setMediaRecorder(recorder);\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error starting audio recording:', error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n      setMediaRecorder(null);\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopRecording,\n      children: \"Stop Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Record Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"vMYO3iE2oc5cUydCCEZnrdQjdns=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AudioRecorder","onRecordingComplete","_s","mediaRecorder","setMediaRecorder","isRecording","setIsRecording","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","audioChunks","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","start","error","console","stopRecording","stop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/AudioRecorder.js"],"sourcesContent":["// AudioRecorder.js\r\nimport React, { useState } from 'react';\r\n\r\nconst AudioRecorder = ({ onRecordingComplete }) => {\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const recorder = new MediaRecorder(stream);\r\n      let audioChunks = [];\r\n\r\n      recorder.ondataavailable = (event) => {\r\n        audioChunks.push(event.data);\r\n      };\r\n\r\n      recorder.onstop = () => {\r\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        onRecordingComplete(audioUrl);\r\n        audioChunks = [];\r\n      };\r\n\r\n      recorder.start();\r\n      setMediaRecorder(recorder);\r\n      setIsRecording(true);\r\n    } catch (error) {\r\n      console.error('Error starting audio recording:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorder) {\r\n      mediaRecorder.stop();\r\n      setMediaRecorder(null);\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isRecording ? (\r\n        <button onClick={stopRecording}>Stop Recording</button>\r\n      ) : (\r\n        <button onClick={startRecording}>Record Audio</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAC1C,IAAIO,WAAW,GAAG,EAAE;MAEpBF,QAAQ,CAACG,eAAe,GAAIC,KAAK,IAAK;QACpCF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;MAC9B,CAAC;MAEDN,QAAQ,CAACO,MAAM,GAAG,MAAM;QACtB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACP,WAAW,EAAE;UAAEQ,IAAI,EAAE;QAAY,CAAC,CAAC;QAC9D,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACL,SAAS,CAAC;QAC/CpB,mBAAmB,CAACuB,QAAQ,CAAC;QAC7BT,WAAW,GAAG,EAAE;MAClB,CAAC;MAEDF,QAAQ,CAACc,KAAK,CAAC,CAAC;MAChBvB,gBAAgB,CAACS,QAAQ,CAAC;MAC1BP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI3B,aAAa,EAAE;MACjBA,aAAa,CAAC4B,IAAI,CAAC,CAAC;MACpB3B,gBAAgB,CAAC,IAAI,CAAC;MACtBE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAiC,QAAA,EACG3B,WAAW,gBACVN,OAAA;MAAQkC,OAAO,EAAEH,aAAc;MAAAE,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEvDtC,OAAA;MAAQkC,OAAO,EAAE1B,cAAe;MAAAyB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACtD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9CIF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}