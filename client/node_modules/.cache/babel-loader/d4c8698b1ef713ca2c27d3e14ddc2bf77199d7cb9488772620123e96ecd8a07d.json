{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\";\n// src/components/StudentRow.js\nimport React from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport handleFileUploadAndLog from '../services/googleDriveService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  const onUploadButtonClick = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const folderId = process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID; // Ensure this is set in your .env file\n    const spreadsheetId = process.env.REACT_APP_GOOGLE_SHEETS_SPREADSHEET_ID; // Ensure this is set in your .env file\n\n    try {\n      const {\n        driveResponse,\n        sheetsResponse\n      } = await handleFileUploadAndLog(file, folderId, spreadsheetId);\n      console.log('Upload response:', driveResponse);\n      console.log('Sheets response:', sheetsResponse);\n      // Handle the UI updates here to reflect the uploaded file details\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      // Handle the error in the UI, such as displaying an error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: `file-upload-${student.id}`,\n        onChange: onUploadButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `file-upload-${student.id}`,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"upload\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","TableRow","TableCell","IconButton","UploadFileIcon","handleFileUploadAndLog","jsxDEV","_jsxDEV","StudentRow","student","onUploadButtonClick","event","file","target","files","folderId","process","env","REACT_APP_GOOGLE_DRIVE_FOLDER_ID","spreadsheetId","REACT_APP_GOOGLE_SHEETS_SPREADSHEET_ID","driveResponse","sheetsResponse","console","log","error","children","name","fileName","_jsxFileName","lineNumber","columnNumber","type","style","display","id","onChange","htmlFor","component","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["// src/components/StudentRow.js\r\nimport React from 'react';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\nimport handleFileUploadAndLog from '../services/googleDriveService';\r\n\r\nconst StudentRow = ({ student }) => {\r\n  const onUploadButtonClick = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    const folderId = process.env.REACT_APP_GOOGLE_DRIVE_FOLDER_ID; // Ensure this is set in your .env file\r\n    const spreadsheetId = process.env.REACT_APP_GOOGLE_SHEETS_SPREADSHEET_ID; // Ensure this is set in your .env file\r\n\r\n    try {\r\n      const { driveResponse, sheetsResponse } = await handleFileUploadAndLog(file, folderId, spreadsheetId);\r\n      console.log('Upload response:', driveResponse);\r\n      console.log('Sheets response:', sheetsResponse);\r\n      // Handle the UI updates here to reflect the uploaded file details\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      // Handle the error in the UI, such as displaying an error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{student.name}</TableCell>\r\n      <TableCell>\r\n        {/* File upload input */}\r\n        <input\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          id={`file-upload-${student.id}`}\r\n          onChange={onUploadButtonClick}\r\n        />\r\n        <label htmlFor={`file-upload-${student.id}`}>\r\n          <IconButton aria-label=\"upload\" component=\"span\">\r\n            <UploadFileIcon />\r\n          </IconButton>\r\n        </label>\r\n      </TableCell>\r\n      {/* Other cells */}\r\n      {/* ... */}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,sBAAsB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAClC,MAAMC,mBAAmB,GAAG,MAAOC,KAAK,IAAK;IAC3C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEX,MAAMG,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,gCAAgC,CAAC,CAAC;IAC/D,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAG,CAACG,sCAAsC,CAAC,CAAC;;IAE1E,IAAI;MACF,MAAM;QAAEC,aAAa;QAAEC;MAAe,CAAC,GAAG,MAAMjB,sBAAsB,CAACO,IAAI,EAAEG,QAAQ,EAAEI,aAAa,CAAC;MACrGI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,aAAa,CAAC;MAC9CE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,cAAc,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACElB,OAAA,CAACN,QAAQ;IAAAyB,QAAA,gBACPnB,OAAA,CAACL,SAAS;MAAAwB,QAAA,EAAEjB,OAAO,CAACkB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrCxB,OAAA,CAACL,SAAS;MAAAwB,QAAA,gBAERnB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAC3BC,EAAE,EAAG,eAAc1B,OAAO,CAAC0B,EAAG,EAAE;QAChCC,QAAQ,EAAE1B;MAAoB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFxB,OAAA;QAAO8B,OAAO,EAAG,eAAc5B,OAAO,CAAC0B,EAAG,EAAE;QAAAT,QAAA,eAC1CnB,OAAA,CAACJ,UAAU;UAAC,cAAW,QAAQ;UAACmC,SAAS,EAAC,MAAM;UAAAZ,QAAA,eAC9CnB,OAAA,CAACH,cAAc;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGJ,CAAC;AAEf,CAAC;AAACQ,EAAA,GAxCI/B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}