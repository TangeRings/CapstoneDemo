{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\Date.js\";\n// Date.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DateDisplay = ({\n  submissions\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: submissions.map((submission, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        marginLeft: '16px'\n      },\n      children: submission.submittedOn.toLocaleDateString()\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = DateDisplay;\nexport default DateDisplay;\nvar _c;\n$RefreshReg$(_c, \"DateDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","DateDisplay","submissions","children","map","submission","index","style","marginLeft","submittedOn","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/Date.js"],"sourcesContent":["// Date.js\r\nimport React from 'react';\r\n\r\nconst DateDisplay = ({ submissions }) => {\r\n  return (\r\n    <>\r\n      {submissions.map((submission, index) => (\r\n        <span key={index} style={{ marginLeft: '16px' }}>\r\n          {submission.submittedOn.toLocaleDateString()}\r\n        </span>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateDisplay;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EACvC,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,EACGD,WAAW,CAACE,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjCR,OAAA;MAAkBS,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAL,QAAA,EAC7CE,UAAU,CAACI,WAAW,CAACC,kBAAkB,CAAC;IAAC,GADnCJ,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACP;EAAC,gBACF,CAAC;AAEP,CAAC;AAACC,EAAA,GAVId,WAAW;AAYjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}