{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\";\n// StudentRow.js\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport BackupIcon from '@material-ui/icons/Backup'; // This is the Material-UI upload icon\nimport Uploader from './Uploader'; // Ensure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StudentRow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFileUpload = async file => {\n      // Assuming Uploader.js returns a promise\n      const uploadResult = await Uploader.uploadFile(file);\n      if (uploadResult.success) {\n        this.setState({\n          item: file.name,\n          // Or any other relevant file information\n          date: new Date().toLocaleDateString() // Sets the upload date to now; adjust as needed\n        });\n      } else {\n        alert('File upload failed!');\n      }\n    };\n    this.state = {\n      item: '',\n      date: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Claire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"*/*\" // Adjust based on the types of files you want to accept\n        ,\n        style: {\n          display: 'none'\n        },\n        id: \"raised-button-file\",\n        multiple: true,\n        type: \"file\",\n        onChange: e => this.handleFileUpload(e.target.files[0]) // Only the first selected file is handled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"raised-button-file\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"span\",\n          startIcon: /*#__PURE__*/_jsxDEV(BackupIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 67\n          }, this),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StudentRow;","map":{"version":3,"names":["React","Button","BackupIcon","Uploader","jsxDEV","_jsxDEV","StudentRow","Component","constructor","props","handleFileUpload","file","uploadResult","uploadFile","success","setState","item","name","date","Date","toLocaleDateString","alert","state","render","style","display","justifyContent","alignItems","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","id","multiple","type","onChange","e","target","files","htmlFor","variant","component","startIcon"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["// StudentRow.js\r\nimport React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport BackupIcon from '@material-ui/icons/Backup'; // This is the Material-UI upload icon\r\nimport Uploader from './Uploader'; // Ensure this path is correct\r\n\r\nclass StudentRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: '',\r\n      date: ''\r\n    };\r\n  }\r\n\r\n  handleFileUpload = async (file) => {\r\n    // Assuming Uploader.js returns a promise\r\n    const uploadResult = await Uploader.uploadFile(file);\r\n    if (uploadResult.success) {\r\n      this.setState({\r\n        item: file.name, // Or any other relevant file information\r\n        date: new Date().toLocaleDateString() // Sets the upload date to now; adjust as needed\r\n      });\r\n    } else {\r\n      alert('File upload failed!');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', marginBottom: '20px' }}>\r\n        <div>Claire</div>\r\n        <div>{this.state.item}</div>\r\n        <div>{this.state.date}</div>\r\n        <input\r\n          accept=\"*/*\" // Adjust based on the types of files you want to accept\r\n          style={{ display: 'none' }}\r\n          id=\"raised-button-file\"\r\n          multiple\r\n          type=\"file\"\r\n          onChange={(e) => this.handleFileUpload(e.target.files[0])} // Only the first selected file is handled\r\n        />\r\n        <label htmlFor=\"raised-button-file\">\r\n          <Button variant=\"contained\" component=\"span\" startIcon={<BackupIcon />}>\r\n            Upload\r\n          </Button>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentRow;\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,UAAU,MAAM,2BAA2B,CAAC,CAAC;AACpD,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,SAASN,KAAK,CAACO,SAAS,CAAC;EACvCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;MACjC;MACA,MAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,UAAU,CAACF,IAAI,CAAC;MACpD,IAAIC,YAAY,CAACE,OAAO,EAAE;QACxB,IAAI,CAACC,QAAQ,CAAC;UACZC,IAAI,EAAEL,IAAI,CAACM,IAAI;UAAE;UACjBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;MACJ,CAAC,MAAM;QACLC,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC;IAjBC,IAAI,CAACC,KAAK,GAAG;MACXN,IAAI,EAAE,EAAE;MACRE,IAAI,EAAE;IACR,CAAC;EACH;EAeAK,MAAMA,CAAA,EAAG;IACP,oBACElB,OAAA;MAAKmB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,cAAc;QAAEC,UAAU,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC1GxB,OAAA;QAAAwB,QAAA,EAAK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjB5B,OAAA;QAAAwB,QAAA,EAAM,IAAI,CAACP,KAAK,CAACN;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5B5B,OAAA;QAAAwB,QAAA,EAAM,IAAI,CAACP,KAAK,CAACJ;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5B5B,OAAA;QACE6B,MAAM,EAAC,KAAK,CAAC;QAAA;QACbV,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAC3BU,EAAE,EAAC,oBAAoB;QACvBC,QAAQ;QACRC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAGC,CAAC,IAAK,IAAI,CAAC7B,gBAAgB,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACF5B,OAAA;QAAOqC,OAAO,EAAC,oBAAoB;QAAAb,QAAA,eACjCxB,OAAA,CAACJ,MAAM;UAAC0C,OAAO,EAAC,WAAW;UAACC,SAAS,EAAC,MAAM;UAACC,SAAS,eAAExC,OAAA,CAACH,UAAU;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAJ,QAAA,EAAC;QAExE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV;AACF;AAEA,eAAe3B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}