{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\Recorder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography } from '@mui/material';\nimport { Mic, Stop } from '@mui/icons-material';\nimport axios from 'axios';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recorder({\n  title\n}) {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [transcript, setTranscript] = useState(\"\");\n  const [audioIntervalId, setAudioIntervalId] = useState(null);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      setMediaRecorder(new MediaRecorder(stream));\n    }).catch(error => {\n      console.error(\"Microphone access was denied.\", error);\n      alert(\"Microphone access is required to record audio.\");\n    });\n  }, []);\n  const sendAudioData = async audioBlob => {\n    try {\n      const formData = new FormData();\n      formData.append(\"audio\", audioBlob);\n      const response = await axios.post('http://localhost:8080/transcribe-audio', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscript(prevTranscript => prevTranscript + ' ' + response.data.transcript);\n    } catch (err) {\n      console.error('Error sending audio to the server:', err);\n    }\n  };\n  const startRecording = () => {\n    setIsRecording(true);\n    const createRecorder = stream => {\n      const recorder = new MediaRecorder(stream);\n      recorder.addEventListener('dataavailable', async event => {\n        if (event.data.size > 0) {\n          sendAudioData(event.data);\n        }\n      });\n      recorder.start();\n      // Stop recording after 2 seconds and handle data available\n      setTimeout(() => {\n        recorder.stop();\n      }, 2000);\n    };\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      createRecorder(stream); // Start recording initially\n\n      // Set interval to stop current recorder and start a new one every 2 seconds\n      const intervalId = setInterval(() => {\n        if (mediaRecorder && mediaRecorder.state === \"recording\") {\n          mediaRecorder.stop();\n        }\n        createRecorder(stream);\n      }, 2000);\n      setAudioIntervalId(intervalId);\n    }).catch(error => {\n      console.error(\"Microphone access was denied.\", error);\n      alert(\"Microphone access is required to record audio.\");\n      setIsRecording(false);\n    });\n  };\n  const stopRecording = () => {\n    if (audioIntervalId) {\n      clearInterval(audioIntervalId);\n      setAudioIntervalId(null);\n    }\n    if (mediaRecorder && mediaRecorder.state === \"recording\") {\n      mediaRecorder.stop();\n    }\n    setIsRecording(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: isRecording ? \"secondary\" : \"primary\",\n      startIcon: isRecording ? /*#__PURE__*/_jsxDEV(Stop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(Mic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }, this),\n      onClick: isRecording ? stopRecording : startRecording,\n      children: isRecording ? 'Stop Recording' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: transcript || 'Transcripts will appear here...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Recorder, \"q2iPCGn6OiBphfWzyvoOtfdsv0I=\");\n_c = Recorder;\nexport default Recorder;\nvar _c;\n$RefreshReg$(_c, \"Recorder\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Typography","Mic","Stop","axios","jsxDEV","_jsxDEV","Recorder","title","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","transcript","setTranscript","audioIntervalId","setAudioIntervalId","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","catch","error","console","alert","sendAudioData","audioBlob","formData","FormData","append","response","post","headers","prevTranscript","data","err","startRecording","createRecorder","recorder","addEventListener","event","size","start","setTimeout","stop","intervalId","setInterval","state","stopRecording","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","startIcon","onClick","style","marginTop","padding","backgroundColor","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/Recorder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, Typography } from '@mui/material';\r\nimport { Mic, Stop } from '@mui/icons-material';\r\nimport axios from 'axios';\r\nimport '../styles/styles.css';\r\n\r\nfunction Recorder({ title }) {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [mediaRecorder, setMediaRecorder] = useState(null);\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [audioIntervalId, setAudioIntervalId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        setMediaRecorder(new MediaRecorder(stream));\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Microphone access was denied.\", error);\r\n        alert(\"Microphone access is required to record audio.\");\r\n      });\r\n  }, []);\r\n\r\n  const sendAudioData = async (audioBlob) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"audio\", audioBlob);\r\n      const response = await axios.post('http://localhost:8080/transcribe-audio', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      setTranscript(prevTranscript => prevTranscript + ' ' + response.data.transcript);\r\n    } catch (err) {\r\n      console.error('Error sending audio to the server:', err);\r\n    }\r\n  };\r\n\r\n  const startRecording = () => {\r\n    setIsRecording(true);\r\n\r\n    const createRecorder = (stream) => {\r\n      const recorder = new MediaRecorder(stream);\r\n\r\n      recorder.addEventListener('dataavailable', async (event) => {\r\n        if (event.data.size > 0) {\r\n          sendAudioData(event.data);\r\n        }\r\n      });\r\n\r\n      recorder.start();\r\n      // Stop recording after 2 seconds and handle data available\r\n      setTimeout(() => {\r\n        recorder.stop();\r\n      }, 2000);\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia({ audio: true })\r\n      .then(stream => {\r\n        createRecorder(stream); // Start recording initially\r\n\r\n        // Set interval to stop current recorder and start a new one every 2 seconds\r\n        const intervalId = setInterval(() => {\r\n          if (mediaRecorder && mediaRecorder.state === \"recording\") {\r\n            mediaRecorder.stop();\r\n          }\r\n          createRecorder(stream);\r\n        }, 2000);\r\n\r\n        setAudioIntervalId(intervalId);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Microphone access was denied.\", error);\r\n        alert(\"Microphone access is required to record audio.\");\r\n        setIsRecording(false);\r\n      });\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (audioIntervalId) {\r\n      clearInterval(audioIntervalId);\r\n      setAudioIntervalId(null);\r\n    }\r\n    if (mediaRecorder && mediaRecorder.state === \"recording\") {\r\n      mediaRecorder.stop();\r\n    }\r\n    setIsRecording(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">{title}</h1>\r\n      <Button\r\n        variant=\"contained\"\r\n        color={isRecording ? \"secondary\" : \"primary\"}\r\n        startIcon={isRecording ? <Stop /> : <Mic />}\r\n        onClick={isRecording ? stopRecording : startRecording}\r\n      >\r\n        {isRecording ? 'Stop Recording' : 'Start Recording'}\r\n      </Button>\r\n      <Card style={{ marginTop: '20px', padding: '15px', backgroundColor: '#f5f5f5' }}>\r\n        <Typography variant=\"body1\">\r\n          {transcript || 'Transcripts will appear here...'}\r\n        </Typography>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recorder;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}