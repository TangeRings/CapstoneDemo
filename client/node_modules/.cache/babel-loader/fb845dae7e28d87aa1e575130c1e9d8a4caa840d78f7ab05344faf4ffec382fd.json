{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFileToServer } from './Uploader';\nimport { getSpreadsheetData } from './getList';\nimport { Link } from 'react-router-dom';\nimport '../styles/dashboard.css';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spreadsheetData, setSpreadsheetData] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Handles file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Function to handle the file upload process\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload first.');\n      return;\n    }\n    setIsUploading(true); // Set the uploading state to true\n\n    uploadFileToServer(selectedFile, student.id).then(() => {\n      alert('File uploaded successfully');\n    }).catch(error => {\n      console.error(\"Error uploading file:\", error);\n      alert('Failed to upload file.');\n    }).finally(() => {\n      setIsUploading(false); // Set the uploading state to false\n    });\n  };\n\n  // Function to fetch spreadsheet data\n  const fetchSpreadsheetData = async () => {\n    try {\n      const data = await getSpreadsheetData();\n      setSpreadsheetData(data);\n      data.sort((a, b) => new Date(a[2]) - new Date(b[2]));\n    } catch (error) {\n      // Handle the error appropriately\n      console.error(\"Error fetching data:\", error);\n      alert('Failed to fetch data.');\n    }\n  };\n\n  // Handles clicking the upload button\n  const handleUploadClick = () => {\n    handleUpload(); // Start the upload process\n  };\n\n  // Handles clicking the refresh button\n  const handleRefreshClick = () => {\n    fetchSpreadsheetData(); // Fetch data on demand\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"student-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"student-name\",\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"upload-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          disabled: isUploading,\n          style: {\n            display: 'none'\n          },\n          id: `raised-button-file-${student.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \"\\\\\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadClick,\n          disabled: isUploading,\n          children: isUploading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefreshClick,\n          disabled: isUploading,\n          children: \"Refresh Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), spreadsheetData && spreadsheetData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"uploaded-files-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Filename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Upload Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: spreadsheetData.map((row, index) => {\n            // Check the content of the row to determine if it's a meeting or file\n            const isMeeting = row[3] === 'meeting';\n            const baseUrl = isMeeting ? '/meeting/' : '/grading/';\n            const linkPath = `${baseUrl}${encodeURIComponent(row[5])}`;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: linkPath,\n                  children: [row[1], \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [row[2], \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentRow, \"zDsS36nZyUiW7EnWYNDLM6GbHW8=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","uploadFileToServer","getSpreadsheetData","Link","CloudUploadIcon","RefreshIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentRow","student","_s","selectedFile","setSelectedFile","spreadsheetData","setSpreadsheetData","isUploading","setIsUploading","handleFileChange","event","target","files","handleUpload","alert","id","then","catch","error","console","finally","fetchSpreadsheetData","data","sort","a","b","Date","handleUploadClick","handleRefreshClick","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","style","display","onClick","length","map","row","index","isMeeting","baseUrl","linkPath","encodeURIComponent","to","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadFileToServer } from './Uploader';\r\nimport { getSpreadsheetData } from './getList';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/dashboard.css';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\n\r\n\r\n\r\nconst StudentRow = ({ student }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [spreadsheetData, setSpreadsheetData] = useState([]);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    // Handles file selection\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    // Function to handle the file upload process\r\n    const handleUpload = () => {\r\n        if (!selectedFile) {\r\n            alert('Please select a file to upload first.');\r\n            return;\r\n        }\r\n\r\n        setIsUploading(true); // Set the uploading state to true\r\n        \r\n        uploadFileToServer(selectedFile, student.id)\r\n            .then(() => {\r\n                alert('File uploaded successfully');\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error uploading file:\", error);\r\n                alert('Failed to upload file.');\r\n            })\r\n            .finally(() => {\r\n                setIsUploading(false); // Set the uploading state to false\r\n            });\r\n    };\r\n\r\n    // Function to fetch spreadsheet data\r\n    const fetchSpreadsheetData = async () => {\r\n        try {\r\n            const data = await getSpreadsheetData();\r\n            setSpreadsheetData(data);\r\n            data.sort((a, b) => new Date(a[2]) - new Date(b[2]));\r\n        } catch (error) {\r\n            // Handle the error appropriately\r\n            console.error(\"Error fetching data:\", error);\r\n            alert('Failed to fetch data.');\r\n        }\r\n    };\r\n\r\n    // Handles clicking the upload button\r\n    const handleUploadClick = () => {\r\n        handleUpload(); // Start the upload process\r\n    };\r\n\r\n    // Handles clicking the refresh button\r\n    const handleRefreshClick = () => {\r\n        fetchSpreadsheetData(); // Fetch data on demand\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <tr className=\"student-row\">\r\n                <td className=\"student-name\">{student.name}</td>\r\n                <td className=\"upload-column\">\r\n                    <input type=\"file\" onChange={handleFileChange} disabled={isUploading} \r\n                    style={{ display: 'none' }}\r\n                    id={`raised-button-file-${student.id}`}/>\\\r\n                    <button onClick={handleUploadClick} disabled={isUploading}>\r\n                        {isUploading ? 'Uploading...' : 'Upload'}\r\n                    </button>\r\n                    <button onClick={handleRefreshClick} disabled={isUploading}>\r\n                        Refresh Data\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n            {/* Data display logic */}\r\n            {spreadsheetData && spreadsheetData.length > 0 && (\r\n            \r\n                \r\n                <div className=\"uploaded-files-container\">\r\n                    \r\n                    <table className=\"uploaded-files-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Filename</th>\r\n                                <th>Upload Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {spreadsheetData.map((row, index) => {\r\n                                // Check the content of the row to determine if it's a meeting or file\r\n                                const isMeeting = row[3] === 'meeting';\r\n                                const baseUrl = isMeeting ? '/meeting/' : '/grading/';\r\n                                const linkPath = `${baseUrl}${encodeURIComponent(row[5])}`;\r\n\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <Link to={linkPath}>\r\n                                                {row[1]} {/* Make filename clickable */}\r\n                                            </Link>\r\n                                        </td>\r\n                                        <td>{row[2]} {/* Display upload date */}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentRow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}