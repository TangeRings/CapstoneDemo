{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\FileList.js\";\n//Filelist\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = ({\n  files\n}) => {\n  // Ensure files is an array before trying to map over it\n  if (!Array.isArray(files)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No files to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: `${file.name} - uploaded on ${file.date}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FileList","files","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","index","name","date","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/FileList.js"],"sourcesContent":["//Filelist\r\nimport React from 'react';\r\n\r\nconst FileList = ({ files }) => {\r\n  // Ensure files is an array before trying to map over it\r\n  if (!Array.isArray(files)) {\r\n    return <div>No files to display.</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {files.map((file, index) => (\r\n          <li key={index}>{`${file.name} - uploaded on ${file.date}`}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC9B;EACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACzB,oBAAOF,OAAA;MAAAK,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxC;EAEA,oBACET,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAAK,QAAA,EACGH,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBZ,OAAA;QAAAK,QAAA,EAAkB,GAAEM,IAAI,CAACE,IAAK,kBAAiBF,IAAI,CAACG,IAAK;MAAC,GAAjDF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiD,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GAfId,QAAQ;AAiBd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}