{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUploader from './FileUploader';\nimport FileList from './FileList';\nimport ActionBar from './ActionBar';\nimport AudioRecorder from './AudioRecorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student,\n  removeStudent\n}) => {\n  _s();\n  const [items, setItems] = useState([]);\n  const handleUploadSuccess = file => {\n    const newFile = {\n      name: file.name,\n      date: new Date().toISOString().slice(0, 10),\n      isEditable: false\n    };\n    setItems([...items, newFile]);\n  };\n  const addAudioRecord = () => {\n    // This function will be triggered when the audio record button is clicked\n    const newRecord = {\n      name: \"Catchup Meeting\",\n      date: new Date().toISOString().slice(0, 10),\n      isEditable: true\n    };\n    setItems([...items, newRecord]);\n  };\n  const handleRecordingComplete = audioUrl => {\n    // This function will be triggered when the audio recording is completed\n    const newRecord = {\n      name: \"New Audio Recording\",\n      date: new Date().toISOString().slice(0, 10),\n      audioUrl,\n      isEditable: true\n    };\n    setItems([...items, newRecord]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionBar, {\n        onUploadClick: () => {},\n        onRecordClick: addAudioRecord\n        // onCalendarSyncClick, onEmailClick, onDownloadClick can be added here when needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n      onUploadSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), items.map((item, index) => item.isEditable ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: item.name,\n        onBlur: e => {\n          // Update the name when the user leaves the input field\n          const newItems = [...items];\n          newItems[index].name = e.target.value;\n          setItems(newItems);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        defaultValue: item.date,\n        onBlur: e => {\n          // Update the date when the user leaves the input field\n          const newItems = [...items];\n          newItems[index].date = e.target.value;\n          setItems(newItems);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), item.audioUrl ? /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: item.audioUrl,\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(AudioRecorder, {\n        onRecordingComplete: url => handleRecordingComplete(url, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : null), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeStudent(student.id),\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentRow, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","FileUploader","FileList","ActionBar","AudioRecorder","jsxDEV","_jsxDEV","StudentRow","student","removeStudent","_s","items","setItems","handleUploadSuccess","file","newFile","name","date","Date","toISOString","slice","isEditable","addAudioRecord","newRecord","handleRecordingComplete","audioUrl","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onUploadClick","onRecordClick","onUploadSuccess","map","item","index","type","defaultValue","onBlur","e","newItems","target","value","controls","src","onRecordingComplete","url","onClick","id","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUploader from './FileUploader';\r\nimport FileList from './FileList';\r\nimport ActionBar from './ActionBar';\r\nimport AudioRecorder from './AudioRecorder';\r\n\r\nconst StudentRow = ({ student, removeStudent }) => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const handleUploadSuccess = (file) => {\r\n    const newFile = {\r\n      name: file.name,\r\n      date: new Date().toISOString().slice(0, 10),\r\n      isEditable: false\r\n    };\r\n    setItems([...items, newFile]);\r\n  };\r\n\r\n  const addAudioRecord = () => {\r\n    // This function will be triggered when the audio record button is clicked\r\n    const newRecord = {\r\n      name: \"Catchup Meeting\",\r\n      date: new Date().toISOString().slice(0, 10),\r\n      isEditable: true\r\n    };\r\n    setItems([...items, newRecord]);\r\n  };\r\n\r\n  const handleRecordingComplete = (audioUrl) => {\r\n    // This function will be triggered when the audio recording is completed\r\n    const newRecord = {\r\n      name: \"New Audio Recording\",\r\n      date: new Date().toISOString().slice(0, 10),\r\n      audioUrl,\r\n      isEditable: true\r\n    };\r\n    setItems([...items, newRecord]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <span>{student.name}</span>\r\n        <ActionBar\r\n          onUploadClick={() => {}}\r\n          onRecordClick={addAudioRecord}\r\n          // onCalendarSyncClick, onEmailClick, onDownloadClick can be added here when needed\r\n        />\r\n      </div>\r\n      <FileUploader onUploadSuccess={handleUploadSuccess} />\r\n      <FileList items={items} />\r\n      {items.map((item, index) => \r\n        item.isEditable ? (\r\n          <div key={index}>\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={item.name}\r\n              onBlur={(e) => {\r\n                // Update the name when the user leaves the input field\r\n                const newItems = [...items];\r\n                newItems[index].name = e.target.value;\r\n                setItems(newItems);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              defaultValue={item.date}\r\n              onBlur={(e) => {\r\n                // Update the date when the user leaves the input field\r\n                const newItems = [...items];\r\n                newItems[index].date = e.target.value;\r\n                setItems(newItems);\r\n              }}\r\n            />\r\n            {item.audioUrl ? (\r\n              <audio controls>\r\n                <source src={item.audioUrl} type=\"audio/wav\" />\r\n              </audio>\r\n            ) : (\r\n              <AudioRecorder onRecordingComplete={(url) => handleRecordingComplete(url, index)} />\r\n            )}\r\n          </div>\r\n        ) : null\r\n      )}\r\n      <button onClick={() => removeStudent(student.id)}>Remove</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}