{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\DashboardTable.js\",\n  _s = $RefreshSig$();\n// DashboardTable.js\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, IconButton } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Submit from './Submit'; // Make sure the path is correct\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardTable = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    name: 'Claire Johnson',\n    submissions: [],\n    grade: '',\n    comments: ''\n  }]);\n  const handleNewSubmission = (newSubmission, index) => {\n    const updatedStudents = [...students];\n    updatedStudents[index].submissions = [...updatedStudents[index].submissions, newSubmission];\n    setStudents(updatedStudents);\n  };\n  const addNewRow = () => {\n    setStudents([...students, {\n      name: '',\n      submissions: [],\n      grade: '',\n      comments: ''\n    }]);\n  };\n  const renderDateColumn = submittedOn => {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      children: submittedOn.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [students.map((student, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.name,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].name = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Submit, {\n                onFileUpload: newSubmission => handleNewSubmission(newSubmission, index),\n                renderDateColumn: renderDateColumn // Pass the renderDateColumn function as a prop\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"grade_column\",\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.grade,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].grade = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.comments,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].comments = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 5,\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: addNewRow,\n                children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardTable, \"ZhS3uGfccK2lznqF4xNBUOoJ+4c=\");\n_c = DashboardTable;\nexport default DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","IconButton","AddCircleOutlineIcon","Submit","jsxDEV","_jsxDEV","DashboardTable","_s","students","setStudents","name","submissions","grade","comments","handleNewSubmission","newSubmission","index","updatedStudents","addNewRow","renderDateColumn","submittedOn","children","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","map","student","fullWidth","value","onChange","e","target","placeholder","onFileUpload","className","colSpan","style","textAlign","onClick","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/DashboardTable.js"],"sourcesContent":["// DashboardTable.js\r\nimport React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, IconButton } from '@mui/material';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport Submit from './Submit'; // Make sure the path is correct\r\nimport '../styles/styles.css';\r\n\r\n\r\nconst DashboardTable = () => {\r\n  const [students, setStudents] = useState([\r\n    { name: 'Claire Johnson', submissions: [], grade: '', comments: '' }\r\n  ]);\r\n\r\n  const handleNewSubmission = (newSubmission, index) => {\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index].submissions = [...updatedStudents[index].submissions, newSubmission];\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const addNewRow = () => {\r\n    setStudents([...students, { name: '', submissions: [], grade: '', comments: '' }]);\r\n  };\r\n\r\n  const renderDateColumn = (submittedOn) => {\r\n    return (\r\n      <TableCell>\r\n        {submittedOn.toLocaleDateString()}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Submission</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Grade</TableCell>\r\n              <TableCell>Comments</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {students.map((student, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.name}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].name = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Submit \r\n                    onFileUpload={(newSubmission) => handleNewSubmission(newSubmission, index)}\r\n                    renderDateColumn={renderDateColumn} // Pass the renderDateColumn function as a prop\r\n                  />\r\n                </TableCell>\r\n                <TableCell />\r\n                <TableCell className='grade_column'>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.grade}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].grade = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter grade\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.comments}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].comments = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter comments\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell colSpan={5} style={{ textAlign: 'center' }}>\r\n                <IconButton onClick={addNewRow}>\r\n                  <AddCircleOutlineIcon />\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default DashboardTable;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAC9H,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAC/B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CACvC;IAAEkB,IAAI,EAAE,gBAAgB;IAAEC,WAAW,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CACrE,CAAC;EAEF,MAAMC,mBAAmB,GAAGA,CAACC,aAAa,EAAEC,KAAK,KAAK;IACpD,MAAMC,eAAe,GAAG,CAAC,GAAGT,QAAQ,CAAC;IACrCS,eAAe,CAACD,KAAK,CAAC,CAACL,WAAW,GAAG,CAAC,GAAGM,eAAe,CAACD,KAAK,CAAC,CAACL,WAAW,EAAEI,aAAa,CAAC;IAC3FN,WAAW,CAACQ,eAAe,CAAC;EAC9B,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEE,IAAI,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC,CAAC;EACpF,CAAC;EAED,MAAMM,gBAAgB,GAAIC,WAAW,IAAK;IACxC,oBACEf,OAAA,CAACV,SAAS;MAAA0B,QAAA,EACPD,WAAW,CAACE,kBAAkB,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAEhB,CAAC;EAED,oBACErB,OAAA,CAACN,KAAK;IAAAsB,QAAA,eACJhB,OAAA,CAACT,cAAc;MAAAyB,QAAA,eACbhB,OAAA,CAACZ,KAAK;QAAA4B,QAAA,gBACJhB,OAAA,CAACR,SAAS;UAAAwB,QAAA,eACRhB,OAAA,CAACP,QAAQ;YAAAuB,QAAA,gBACPhB,OAAA,CAACV,SAAS;cAAA0B,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3BrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,EAAC;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACjCrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC3BrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eAC5BrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZrB,OAAA,CAACX,SAAS;UAAA2B,QAAA,GACPb,QAAQ,CAACmB,GAAG,CAAC,CAACC,OAAO,EAAEZ,KAAK,kBAC3BX,OAAA,CAACP,QAAQ;YAAAuB,QAAA,gBACPhB,OAAA,CAACV,SAAS;cAAA0B,QAAA,eACRhB,OAAA,CAACL,SAAS;gBACR6B,SAAS;gBACTC,KAAK,EAAEF,OAAO,CAAClB,IAAK;gBACpBqB,QAAQ,EAAGC,CAAC,IAAK;kBACf,MAAMf,eAAe,GAAG,CAAC,GAAGT,QAAQ,CAAC;kBACrCS,eAAe,CAACD,KAAK,CAAC,CAACN,IAAI,GAAGsB,CAAC,CAACC,MAAM,CAACH,KAAK;kBAC5CrB,WAAW,CAACQ,eAAe,CAAC;gBAC9B,CAAE;gBACFiB,WAAW,EAAC;cAAY;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACZrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,eACRhB,OAAA,CAACF,MAAM;gBACLgC,YAAY,EAAGpB,aAAa,IAAKD,mBAAmB,CAACC,aAAa,EAAEC,KAAK,CAAE;gBAC3EG,gBAAgB,EAAEA,gBAAiB,CAAC;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACZrB,OAAA,CAACV,SAAS;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACbrB,OAAA,CAACV,SAAS;cAACyC,SAAS,EAAC,cAAc;cAAAf,QAAA,eACjChB,OAAA,CAACL,SAAS;gBACR6B,SAAS;gBACTC,KAAK,EAAEF,OAAO,CAAChB,KAAM;gBACrBmB,QAAQ,EAAGC,CAAC,IAAK;kBACf,MAAMf,eAAe,GAAG,CAAC,GAAGT,QAAQ,CAAC;kBACrCS,eAAe,CAACD,KAAK,CAAC,CAACJ,KAAK,GAAGoB,CAAC,CAACC,MAAM,CAACH,KAAK;kBAC7CrB,WAAW,CAACQ,eAAe,CAAC;gBAC9B,CAAE;gBACFiB,WAAW,EAAC;cAAa;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC,eACZrB,OAAA,CAACV,SAAS;cAAA0B,QAAA,eACRhB,OAAA,CAACL,SAAS;gBACR6B,SAAS;gBACTC,KAAK,EAAEF,OAAO,CAACf,QAAS;gBACxBkB,QAAQ,EAAGC,CAAC,IAAK;kBACf,MAAMf,eAAe,GAAG,CAAC,GAAGT,QAAQ,CAAC;kBACrCS,eAAe,CAACD,KAAK,CAAC,CAACH,QAAQ,GAAGmB,CAAC,CAACC,MAAM,CAACH,KAAK;kBAChDrB,WAAW,CAACQ,eAAe,CAAC;gBAC9B,CAAE;gBACFiB,WAAW,EAAC;cAAgB;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA,GA3CCV,KAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4CV,CACX,CAAC,eACFrB,OAAA,CAACP,QAAQ;YAAAuB,QAAA,eACPhB,OAAA,CAACV,SAAS;cAAC0C,OAAO,EAAE,CAAE;cAACC,KAAK,EAAE;gBAAEC,SAAS,EAAE;cAAS,CAAE;cAAAlB,QAAA,eACpDhB,OAAA,CAACJ,UAAU;gBAACuC,OAAO,EAAEtB,SAAU;gBAAAG,QAAA,eAC7BhB,OAAA,CAACH,oBAAoB;kBAAAqB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEZ,CAAC;AAACnB,EAAA,CAhGID,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AAkGpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}