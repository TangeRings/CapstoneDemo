{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\n// StudentRow.js\nimport React, { useState } from 'react';\nimport { uploadFileToServer } from './Uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Handles file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Handles file upload\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload first.');\n      return;\n    }\n    try {\n      await uploadFileToServer(selectedFile, student.id);\n      alert('File uploaded successfully');\n      // TODO: refresh or update state to show the uploaded file\n    } catch (error) {\n      alert('Failed to upload file');\n      // TODO: handle the error more gracefully\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentRow, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","uploadFileToServer","jsxDEV","_jsxDEV","StudentRow","student","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","alert","id","error","children","name","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["// StudentRow.js\r\nimport React, { useState } from 'react';\r\nimport { uploadFileToServer } from './Uploader';\r\n\r\nconst StudentRow = ({ student }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    // Handles file selection\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    // Handles file upload\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert('Please select a file to upload first.');\r\n            return;\r\n        }\r\n        try {\r\n            await uploadFileToServer(selectedFile, student.id);\r\n            alert('File uploaded successfully');\r\n            // TODO: refresh or update state to show the uploaded file\r\n        } catch (error) {\r\n            alert('Failed to upload file');\r\n            // TODO: handle the error more gracefully\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{student.name}</td>\r\n            <td>\r\n                {/* File input field */}\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n            </td>\r\n            <td>\r\n                {/* Upload button */}\r\n                <button onClick={handleUpload}>Upload</button>\r\n            </td>\r\n            {/* Additional columns */}\r\n            {/* Remove the comment inside JSX or it will cause an error */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kBAAkB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,YAAY,EAAE;MACfO,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACJ;IACA,IAAI;MACA,MAAMb,kBAAkB,CAACM,YAAY,EAAEF,OAAO,CAACU,EAAE,CAAC;MAClDD,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZF,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAKZ,OAAO,CAACa;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBnB,OAAA;MAAAc,QAAA,eAEId,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEf;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACLnB,OAAA;MAAAc,QAAA,eAEId,OAAA;QAAQsB,OAAO,EAAEZ,YAAa;QAAAI,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEb,CAAC;AAAChB,EAAA,CAvCIF,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}