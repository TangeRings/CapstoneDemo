{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\FileContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileContext = /*#__PURE__*/createContext();\nexport const FileProvider = ({\n  children\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const addFile = newFile => {\n    setFiles(prevFiles => [...prevFiles, newFile]);\n  };\n\n  // Define the updateFile function\n  const updateFile = (fileId, updatedProperties) => {\n    setFiles(currentFiles => currentFiles.map(file => file.fileId === fileId ? {\n      ...file,\n      ...updatedProperties\n    } : file));\n  };\n  return /*#__PURE__*/_jsxDEV(FileContext.Provider, {\n    value: {\n      files,\n      addFile,\n      updateFile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use the file context\n_s(FileProvider, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = FileProvider;\nexport const useFiles = () => {\n  _s2();\n  return useContext(FileContext);\n};\n_s2(useFiles, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FileProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","FileContext","FileProvider","children","_s","files","setFiles","addFile","newFile","prevFiles","updateFile","fileId","updatedProperties","currentFiles","map","file","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFiles","_s2","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/FileContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst FileContext = createContext();\r\n\r\nexport const FileProvider = ({ children }) => {\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const addFile = (newFile) => {\r\n        setFiles((prevFiles) => [...prevFiles, newFile]);\r\n    };\r\n\r\n    // Define the updateFile function\r\n    const updateFile = (fileId, updatedProperties) => {\r\n        setFiles((currentFiles) =>\r\n            currentFiles.map((file) =>\r\n                file.fileId === fileId ? { ...file, ...updatedProperties } : file\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <FileContext.Provider value={{ files, addFile, updateFile }}>\r\n            {children}\r\n        </FileContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the file context\r\nexport const useFiles = () => useContext(FileContext);\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,OAAO,GAAIC,OAAO,IAAK;IACzBF,QAAQ,CAAEG,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAACC,MAAM,EAAEC,iBAAiB,KAAK;IAC9CN,QAAQ,CAAEO,YAAY,IAClBA,YAAY,CAACC,GAAG,CAAEC,IAAI,IAClBA,IAAI,CAACJ,MAAM,KAAKA,MAAM,GAAG;MAAE,GAAGI,IAAI;MAAE,GAAGH;IAAkB,CAAC,GAAGG,IACjE,CACJ,CAAC;EACL,CAAC;EAED,oBACIf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAEE,OAAO;MAAEG;IAAW,CAAE;IAAAP,QAAA,EACvDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAjB,EAAA,CAvBaF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAwBzB,OAAO,MAAMqB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACG,WAAW,CAAC;AAAA;AAACuB,GAAA,CAAzCD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}