{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUploader from './FileUploader';\nimport FileList from './FileList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = () => {\n  _s();\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const handleUploadSuccess = file => {\n    // Do something with the uploaded file, e.g., set it to state\n    setUploadedFile(file);\n    // You can also perform other actions like sending the file to a server\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"Claire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [!uploadedFile && /*#__PURE__*/_jsxDEV(FileUploader, {\n        onUploadSuccess: handleUploadSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 27\n      }, this), uploadedFile && /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentRow, \"Qob18wiaweYayspIGG7oNo9XQM4=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","FileUploader","FileList","jsxDEV","_jsxDEV","StudentRow","_s","uploadedFile","setUploadedFile","handleUploadSuccess","file","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUploader from './FileUploader';\r\nimport FileList from './FileList';\r\n\r\nconst StudentRow = () => {\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n\r\n  const handleUploadSuccess = (file) => {\r\n    // Do something with the uploaded file, e.g., set it to state\r\n    setUploadedFile(file);\r\n    // You can also perform other actions like sending the file to a server\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>Claire</td>\r\n      <td>\r\n        {/* Render FileUploader component conditionally */}\r\n        {!uploadedFile && <FileUploader onUploadSuccess={handleUploadSuccess} />}\r\n        {/* Render FileList component if file has been uploaded */}\r\n        {uploadedFile && <FileList />}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,mBAAmB,GAAIC,IAAI,IAAK;IACpC;IACAF,eAAe,CAACE,IAAI,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfX,OAAA;MAAAO,QAAA,GAEG,CAACJ,YAAY,iBAAIH,OAAA,CAACH,YAAY;QAACe,eAAe,EAAEP;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEvER,YAAY,iBAAIH,OAAA,CAACF,QAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET,CAAC;AAACT,EAAA,CApBID,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}