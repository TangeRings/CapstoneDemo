{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUploader from './FileUploader';\nimport ActionBar from './ActionBar'; // Import ActionBar here\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student,\n  removeStudent\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const handleUploadSuccess = file => {\n    const newFile = {\n      name: file.name,\n      date: new Date().toISOString().slice(0, 10) // Keeps only the date part\n    };\n    setFiles([...files, newFile]);\n  };\n\n  // Define additional handlers for other actions in ActionBar here\n  const handleRecordAudio = () => {\n    // Logic for recording audio\n  };\n  const handleSendEmail = () => {\n    // Logic for sending email\n  };\n\n  // Define more handlers as needed\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [files.length === 0 ?\n    /*#__PURE__*/\n    // If no files uploaded, just show the student's name and the action bar\n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"4\",\n        children: /*#__PURE__*/_jsxDEV(ActionBar, {\n          onUploadClick: () => {} // We'll trigger the file input via FileUploader component\n          ,\n          onRecordClick: handleRecordAudio,\n          onEmailClick: handleSendEmail\n          // Add more props as needed for additional actions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : files.map((file, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [index === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n        children: student.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: file.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"td\", {\n        rowSpan: files.length,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeStudent(student.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this) : null]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"5\",\n        children: /*#__PURE__*/_jsxDEV(FileUploader, {\n          onUploadSuccess: handleUploadSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentRow, \"aPldHTVBr/g7fY6pAkrAgkA0SoA=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","FileUploader","ActionBar","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentRow","student","removeStudent","_s","files","setFiles","handleUploadSuccess","file","newFile","name","date","Date","toISOString","slice","handleRecordAudio","handleSendEmail","children","length","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","onUploadClick","onRecordClick","onEmailClick","map","index","rowSpan","onClick","id","onUploadSuccess","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUploader from './FileUploader';\r\nimport ActionBar from './ActionBar'; // Import ActionBar here\r\n\r\nconst StudentRow = ({ student, removeStudent }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleUploadSuccess = (file) => {\r\n    const newFile = {\r\n      name: file.name,\r\n      date: new Date().toISOString().slice(0, 10) // Keeps only the date part\r\n    };\r\n    setFiles([...files, newFile]);\r\n  };\r\n\r\n  // Define additional handlers for other actions in ActionBar here\r\n  const handleRecordAudio = () => {\r\n    // Logic for recording audio\r\n  };\r\n\r\n  const handleSendEmail = () => {\r\n    // Logic for sending email\r\n  };\r\n\r\n  // Define more handlers as needed\r\n\r\n  return (\r\n    <>\r\n      {files.length === 0 ? (\r\n        // If no files uploaded, just show the student's name and the action bar\r\n        <tr>\r\n          <td>{student.name}</td>\r\n          <td colSpan=\"4\">\r\n            <ActionBar\r\n              onUploadClick={() => {}} // We'll trigger the file input via FileUploader component\r\n              onRecordClick={handleRecordAudio}\r\n              onEmailClick={handleSendEmail}\r\n              // Add more props as needed for additional actions\r\n            />\r\n          </td>\r\n        </tr>\r\n      ) : (\r\n        files.map((file, index) => (\r\n          <tr key={index}>\r\n            {index === 0 ? <td>{student.name}</td> : <td></td>}\r\n            <td>{file.name}</td>\r\n            <td>{file.date}</td>\r\n            <td> {/* Placeholder for \"Other\" column */} </td>\r\n            {index === 0 ? (\r\n              <td rowSpan={files.length}>\r\n                <button onClick={() => removeStudent(student.id)}>Remove</button>\r\n              </td>\r\n            ) : null}\r\n          </tr>\r\n        ))\r\n      )}\r\n      <tr>\r\n        <td colSpan=\"5\">\r\n          <FileUploader onUploadSuccess={handleUploadSuccess} />\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}