{"ast":null,"code":"// This is a frontend service that would send a request to your backend endpoint.\n// The backend would handle the interaction with the Google API.\n\nconst uploadFileToDriveAndLog = async (file, studentId) => {\n  // Create FormData to send the file to the backend\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('studentId', studentId);\n\n  // The backend endpoint that handles the upload and logging\n  const uploadEndpoint = '/api/upload-file'; // You should replace this with your actual backend endpoint\n\n  try {\n    const response = await fetch(uploadEndpoint, {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok.');\n    }\n\n    // You can adjust the response format based on how your backend sends the response\n    return await response.json();\n  } catch (error) {\n    console.error('Error during file upload:', error);\n    throw error;\n  }\n};\nexport default uploadFileToDriveAndLog;","map":{"version":3,"names":["uploadFileToDriveAndLog","file","studentId","formData","FormData","append","uploadEndpoint","response","fetch","method","body","ok","Error","json","error","console"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/services/googleDriveService.js"],"sourcesContent":["// This is a frontend service that would send a request to your backend endpoint.\r\n// The backend would handle the interaction with the Google API.\r\n\r\nconst uploadFileToDriveAndLog = async (file, studentId) => {\r\n  // Create FormData to send the file to the backend\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('studentId', studentId);\r\n\r\n  // The backend endpoint that handles the upload and logging\r\n  const uploadEndpoint = '/api/upload-file'; // You should replace this with your actual backend endpoint\r\n\r\n  try {\r\n    const response = await fetch(uploadEndpoint, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok.');\r\n    }\r\n\r\n    // You can adjust the response format based on how your backend sends the response\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error during file upload:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default uploadFileToDriveAndLog;\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,uBAAuB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,SAAS,KAAK;EACzD;EACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC7BE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,SAAS,CAAC;;EAEvC;EACA,MAAMI,cAAc,GAAG,kBAAkB,CAAC,CAAC;;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,cAAc,EAAE;MAC3CG,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACR,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD;;IAEA;IACA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAed,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}