{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\DashboardTable.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardTable = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    id: 1,\n    name: 'Claire',\n    files: []\n  }]);\n  const fileInputRef = React.useRef(null); // Using a ref to access the file input directly\n\n  const addStudent = () => {\n    const newStudent = {\n      id: students.length + 1,\n      name: `Student ${students.length + 1}`,\n      files: []\n    };\n    setStudents(students.concat(newStudent));\n  };\n  const handleSyllabusUpload = async event => {\n    const file = event.target.files[0];\n    if (file && file.type === \"application/pdf\") {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        // Upload the file to the server\n        const response = await axios.post('http://127.0.0.1:5050/syllabus', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data.success) {\n          alert('Syllabus uploaded successfully!');\n        }\n      } catch (error) {\n        console.error('Error uploading syllabus:', error);\n        alert('Failed to upload syllabus.');\n      } finally {\n        // Clear the file input after upload (even if failed) to allow re-uploading the same file\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n      }\n    } else {\n      alert('Please select a PDF file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      accept: \"application/pdf\",\n      style: {\n        display: 'none'\n      },\n      id: \"syllabus-upload\",\n      type: \"file\",\n      onChange: handleSyllabusUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"syllabus-upload\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        component: \"span\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: \"Upload Syllabus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addStudent,\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: students.map(student => /*#__PURE__*/_jsxDEV(StudentRow, {\n          student: student\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardTable, \"C9SBX2W9XWwvBabnfdS4+kCj73E=\");\n_c = DashboardTable;\nexport default DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["DashboardTable","_s","students","setStudents","useState","id","name","files","fileInputRef","React","useRef","addStudent","newStudent","length","concat","handleSyllabusUpload","event","file","target","type","formData","FormData","append","response","axios","post","headers","data","success","alert","error","console","current","value","_jsxDEV","children","ref","accept","style","display","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","Button","variant","color","component","marginBottom","onClick","map","student","StudentRow","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/DashboardTable.js"],"sourcesContent":["const DashboardTable = () => {\r\n    const [students, setStudents] = useState([{ id: 1, name: 'Claire', files: [] }]);\r\n    const fileInputRef = React.useRef(null);  // Using a ref to access the file input directly\r\n\r\n    const addStudent = () => {\r\n        const newStudent = {\r\n            id: students.length + 1,\r\n            name: `Student ${students.length + 1}`,\r\n            files: []\r\n        };\r\n        setStudents(students.concat(newStudent));\r\n    };\r\n\r\n    const handleSyllabusUpload = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && file.type === \"application/pdf\") {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n\r\n            try {\r\n                // Upload the file to the server\r\n                const response = await axios.post('http://127.0.0.1:5050/syllabus', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                });\r\n\r\n                if (response.data.success) {\r\n                    alert('Syllabus uploaded successfully!');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error uploading syllabus:', error);\r\n                alert('Failed to upload syllabus.');\r\n            } finally {\r\n                // Clear the file input after upload (even if failed) to allow re-uploading the same file\r\n                if (fileInputRef.current) {\r\n                    fileInputRef.current.value = '';\r\n                }\r\n            }\r\n        } else {\r\n            alert('Please select a PDF file to upload.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                ref={fileInputRef}\r\n                accept=\"application/pdf\"\r\n                style={{ display: 'none' }}\r\n                id=\"syllabus-upload\"\r\n                type=\"file\"\r\n                onChange={handleSyllabusUpload}\r\n            />\r\n            <label htmlFor=\"syllabus-upload\">\r\n                <Button variant=\"contained\" color=\"secondary\" component=\"span\" style={{ marginBottom: '20px' }}>\r\n                    Upload Syllabus\r\n                </Button>\r\n            </label>\r\n            <button onClick={addStudent} style={{ marginBottom: '20px' }}>Add Student</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Upload</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {students.map(student => (\r\n                        <StudentRow key={student.id} student={student} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardTable;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}