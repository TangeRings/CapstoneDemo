{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\StudentRow.js\",\n  _s = $RefreshSig$();\n// StudentRow.js\nimport React, { useState } from 'react';\nimport { uploadFileToServer } from './Uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentRow = ({\n  student\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  // Handles file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    // Reset upload status when a new file is selected\n    setUploadStatus('');\n  };\n\n  // Handles file upload\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('Please select a file to upload first.');\n      return;\n    }\n    setUploading(true); // Indicate that upload has started\n    try {\n      const response = await uploadFileToServer(selectedFile, student.id);\n      // Assuming the response includes some indication of success\n      if (response.success) {\n        alert('File uploaded successfully');\n        setUploadStatus('Success');\n      } else {\n        // Handle cases where the upload didn't throw an error but failed for some reason\n        alert(`Failed to upload file: ${response.error || 'Unknown error'}`);\n        setUploadStatus('Failed');\n      }\n    } catch (error) {\n      // This catch block is for network errors or other unexpected issues\n      alert(`Failed to upload file: ${error.message}`);\n      setUploadStatus('Failed');\n    } finally {\n      setUploading(false); // Reset uploading state regardless of outcome\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: student.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: uploadStatus && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentRow, \"oEW8jPaaNCyrvrzBWDT0UcGZukk=\");\n_c = StudentRow;\nexport default StudentRow;\nvar _c;\n$RefreshReg$(_c, \"StudentRow\");","map":{"version":3,"names":["React","useState","uploadFileToServer","jsxDEV","_jsxDEV","StudentRow","student","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadStatus","setUploadStatus","handleFileChange","event","target","files","handleUpload","alert","response","id","success","error","message","children","name","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/StudentRow.js"],"sourcesContent":["// StudentRow.js\r\nimport React, { useState } from 'react';\r\nimport { uploadFileToServer } from './Uploader';\r\n\r\nconst StudentRow = ({ student }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [uploadStatus, setUploadStatus] = useState('');\r\n\r\n    // Handles file selection\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        // Reset upload status when a new file is selected\r\n        setUploadStatus('');\r\n    };\r\n\r\n    // Handles file upload\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert('Please select a file to upload first.');\r\n            return;\r\n        }\r\n        setUploading(true); // Indicate that upload has started\r\n        try {\r\n            const response = await uploadFileToServer(selectedFile, student.id);\r\n            // Assuming the response includes some indication of success\r\n            if (response.success) {\r\n                alert('File uploaded successfully');\r\n                setUploadStatus('Success');\r\n            } else {\r\n                // Handle cases where the upload didn't throw an error but failed for some reason\r\n                alert(`Failed to upload file: ${response.error || 'Unknown error'}`);\r\n                setUploadStatus('Failed');\r\n            }\r\n        } catch (error) {\r\n            // This catch block is for network errors or other unexpected issues\r\n            alert(`Failed to upload file: ${error.message}`);\r\n            setUploadStatus('Failed');\r\n        } finally {\r\n            setUploading(false); // Reset uploading state regardless of outcome\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr>\r\n            <td>{student.name}</td>\r\n            <td>\r\n                {/* File input field */}\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n            </td>\r\n            <td>\r\n                {/* Upload button */}\r\n                <button onClick={handleUpload} disabled={uploading}>\r\n                    {uploading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n            </td>\r\n            <td>\r\n                {/* Display upload status */}\r\n                {uploadStatus && <span>{uploadStatus}</span>}\r\n            </td>\r\n            {/* Additional columns */}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default StudentRow;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}