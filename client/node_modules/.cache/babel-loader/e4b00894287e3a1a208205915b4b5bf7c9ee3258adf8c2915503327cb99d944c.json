{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\MeetingNote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Checkbox, FormControlLabel, Typography, Paper, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MeetingNote() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [summary, setSummary] = useState('');\n  const [actionItems, setActionItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [documentId, setDocumentId] = useState(null);\n  useEffect(() => {\n    // Retrieve data for a specific documentId if it's set\n    if (documentId) {\n      fetchActionItems(documentId);\n    }\n  }, [documentId]);\n  const fetchActionItems = async docId => {\n    try {\n      setLoading(true);\n      const response = await fetch(`/api/documents/${docId}`);\n      const data = await response.json();\n      setSummary(data.summary);\n      setActionItems(data.actionItems);\n    } catch (error) {\n      console.error('Error fetching document:', error);\n      alert('Error fetching the action items.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    // Existing logic for file upload\n    // ...\n    // Assume the backend response includes a document identifier\n    const data = await response.json();\n    setDocumentId(data.documentId);\n    setSummary(data.summary);\n    setActionItems(data.actionItems);\n  };\n\n  // Logic for updating action items\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(MeetingNote, \"aNFWf+JiFLzwD/81e1pU0yNmbVA=\");\n_c = MeetingNote;\nexport default MeetingNote;\nvar _c;\n$RefreshReg$(_c, \"MeetingNote\");","map":{"version":3,"names":["React","useState","useEffect","Button","TextField","Checkbox","FormControlLabel","Typography","Paper","Box","jsxDEV","_jsxDEV","MeetingNote","_s","file","setFile","summary","setSummary","actionItems","setActionItems","loading","setLoading","documentId","setDocumentId","fetchActionItems","docId","response","fetch","data","json","error","console","alert","handleFileChange","event","target","files","handleSubmit","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/MeetingNote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Checkbox, FormControlLabel, Typography, Paper, Box } from '@mui/material';\r\n\r\nfunction MeetingNote() {\r\n    const [file, setFile] = useState(null);\r\n    const [summary, setSummary] = useState('');\r\n    const [actionItems, setActionItems] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [documentId, setDocumentId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Retrieve data for a specific documentId if it's set\r\n        if (documentId) {\r\n            fetchActionItems(documentId);\r\n        }\r\n    }, [documentId]);\r\n\r\n    const fetchActionItems = async (docId) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch(`/api/documents/${docId}`);\r\n            const data = await response.json();\r\n            setSummary(data.summary);\r\n            setActionItems(data.actionItems);\r\n        } catch (error) {\r\n            console.error('Error fetching document:', error);\r\n            alert('Error fetching the action items.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        // Existing logic for file upload\r\n        // ...\r\n        // Assume the backend response includes a document identifier\r\n        const data = await response.json();\r\n        setDocumentId(data.documentId);\r\n        setSummary(data.summary);\r\n        setActionItems(data.actionItems);\r\n    };\r\n\r\n    // Logic for updating action items\r\n    // ...\r\n\r\n    return (\r\n        <Box p={3}>\r\n            {/* Existing UI elements */}\r\n            {/* ... */}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default MeetingNote;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,EAAEC,KAAK,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ;IACA,IAAIoB,UAAU,EAAE;MACZE,gBAAgB,CAACF,UAAU,CAAC;IAChC;EACJ,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAME,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACAJ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBF,KAAM,EAAC,CAAC;MACvD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCZ,UAAU,CAACW,IAAI,CAACZ,OAAO,CAAC;MACxBG,cAAc,CAACS,IAAI,CAACV,WAAW,CAAC;IACpC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDE,KAAK,CAAC,kCAAkC,CAAC;IAC7C,CAAC,SAAS;MACNX,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAChCnB,OAAO,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACA;IACA;IACA,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCN,aAAa,CAACK,IAAI,CAACN,UAAU,CAAC;IAC9BL,UAAU,CAACW,IAAI,CAACZ,OAAO,CAAC;IACxBG,cAAc,CAACS,IAAI,CAACV,WAAW,CAAC;EACpC,CAAC;;EAED;EACA;;EAEA,oBACIP,OAAA,CAACF,GAAG;IAAC6B,CAAC,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEd;AAAC7B,EAAA,CApDQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAsDpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}