{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Projects\\\\CapstoneAssistantDemo\\\\client\\\\src\\\\components\\\\DashboardTable.js\",\n  _s = $RefreshSig$();\n// DashboardTable.js\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, TextField } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport Submit from './Submit'; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardTable = () => {\n  _s();\n  const [students, setStudents] = useState([{\n    name: 'Claire Johnson',\n    submissions: [],\n    grade: '',\n    comments: ''\n  }]);\n  const handleNewSubmission = (newSubmission, index) => {\n    // Update submissions for the student at the given index\n    const updatedStudents = [...students];\n    updatedStudents[index].submissions = [...updatedStudents[index].submissions, newSubmission];\n    setStudents(updatedStudents);\n  };\n  const addNewRow = () => {\n    // Add a new student row with default values\n    setStudents([...students, {\n      name: '',\n      submissions: [],\n      grade: '',\n      comments: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"student submissions\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: students.map((student, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.name,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].name = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [student.submissions.map((submission, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: submission.fileName\n              }, sIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(Submit, {\n                onFileUpload: newSubmission => handleNewSubmission(newSubmission, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: student.submissions.map((submission, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: submission.submittedOn.toLocaleDateString()\n              }, sIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.grade,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].grade = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: student.comments,\n                onChange: e => {\n                  const updatedStudents = [...students];\n                  updatedStudents[index].comments = e.target.value;\n                  setStudents(updatedStudents);\n                },\n                placeholder: \"Enter comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: addNewRow,\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DashboardTable, \"ZhS3uGfccK2lznqF4xNBUOoJ+4c=\");\n_c = DashboardTable;\nexport default DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","TextField","AddCircleOutlineIcon","Submit","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardTable","_s","students","setStudents","name","submissions","grade","comments","handleNewSubmission","newSubmission","index","updatedStudents","addNewRow","children","component","fileName","_jsxFileName","lineNumber","columnNumber","map","student","fullWidth","value","onChange","e","target","placeholder","submission","sIndex","onFileUpload","submittedOn","toLocaleDateString","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["D:/VS Projects/CapstoneAssistantDemo/client/src/components/DashboardTable.js"],"sourcesContent":["// DashboardTable.js\r\nimport React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, IconButton, TextField } from '@mui/material';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport Submit from './Submit'; // Make sure the path is correct\r\n\r\nconst DashboardTable = () => {\r\n  const [students, setStudents] = useState([\r\n    { name: 'Claire Johnson', submissions: [], grade: '', comments: '' }\r\n  ]);\r\n\r\n  const handleNewSubmission = (newSubmission, index) => {\r\n    // Update submissions for the student at the given index\r\n    const updatedStudents = [...students];\r\n    updatedStudents[index].submissions = [...updatedStudents[index].submissions, newSubmission];\r\n    setStudents(updatedStudents);\r\n  };\r\n\r\n  const addNewRow = () => {\r\n    // Add a new student row with default values\r\n    setStudents([...students, { name: '', submissions: [], grade: '', comments: '' }]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"student submissions\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Submission</TableCell>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Grade</TableCell>\r\n              <TableCell>Comments</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {students.map((student, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.name}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].name = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* Render the file submission names */}\r\n                  {student.submissions.map((submission, sIndex) => (\r\n                    <div key={sIndex}>{submission.fileName}</div>\r\n                  ))}\r\n                  {/* Render the upload button */}\r\n                  <Submit onFileUpload={(newSubmission) => handleNewSubmission(newSubmission, index)} />\r\n                </TableCell>\r\n                <TableCell>\r\n                  {/* Render the submission dates */}\r\n                  {student.submissions.map((submission, sIndex) => (\r\n                    <div key={sIndex}>{submission.submittedOn.toLocaleDateString()}</div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.grade}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].grade = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter grade\"\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    fullWidth\r\n                    value={student.comments}\r\n                    onChange={(e) => {\r\n                      const updatedStudents = [...students];\r\n                      updatedStudents[index].comments = e.target.value;\r\n                      setStudents(updatedStudents);\r\n                    }}\r\n                    placeholder=\"Enter comments\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <IconButton onClick={addNewRow} style={{ marginTop: '10px' }}>\r\n        <AddCircleOutlineIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardTable;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}